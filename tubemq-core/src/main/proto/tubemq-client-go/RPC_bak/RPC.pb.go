// Code generated by protoc-gen-go. DO NOT EDIT.
// source: RPC.proto

package RPC

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ResponseHeader_Status int32

const (
	ResponseHeader_SUCCESS ResponseHeader_Status = 0
	ResponseHeader_ERROR   ResponseHeader_Status = 1
	ResponseHeader_FATAL   ResponseHeader_Status = 2
)

var ResponseHeader_Status_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR",
	2: "FATAL",
}

var ResponseHeader_Status_value = map[string]int32{
	"SUCCESS": 0,
	"ERROR":   1,
	"FATAL":   2,
}

func (x ResponseHeader_Status) Enum() *ResponseHeader_Status {
	p := new(ResponseHeader_Status)
	*p = x
	return p
}

func (x ResponseHeader_Status) String() string {
	return proto.EnumName(ResponseHeader_Status_name, int32(x))
}

func (x *ResponseHeader_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ResponseHeader_Status_value, data, "ResponseHeader_Status")
	if err != nil {
		return err
	}
	*x = ResponseHeader_Status(value)
	return nil
}

func (ResponseHeader_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_438fa73ead152342, []int{3, 0}
}

type RpcConnHeader struct {
	Flag                 *int32   `protobuf:"varint,1,req,name=flag" json:"flag,omitempty"`
	TraceId              *int64   `protobuf:"varint,2,opt,name=traceId" json:"traceId,omitempty"`
	SpanId               *int64   `protobuf:"varint,3,opt,name=spanId" json:"spanId,omitempty"`
	ParentId             *int64   `protobuf:"varint,4,opt,name=parentId" json:"parentId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcConnHeader) Reset()         { *m = RpcConnHeader{} }
func (m *RpcConnHeader) String() string { return proto.CompactTextString(m) }
func (*RpcConnHeader) ProtoMessage()    {}
func (*RpcConnHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_438fa73ead152342, []int{0}
}

func (m *RpcConnHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcConnHeader.Unmarshal(m, b)
}
func (m *RpcConnHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcConnHeader.Marshal(b, m, deterministic)
}
func (m *RpcConnHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcConnHeader.Merge(m, src)
}
func (m *RpcConnHeader) XXX_Size() int {
	return xxx_messageInfo_RpcConnHeader.Size(m)
}
func (m *RpcConnHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcConnHeader.DiscardUnknown(m)
}

var xxx_messageInfo_RpcConnHeader proto.InternalMessageInfo

func (m *RpcConnHeader) GetFlag() int32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *RpcConnHeader) GetTraceId() int64 {
	if m != nil && m.TraceId != nil {
		return *m.TraceId
	}
	return 0
}

func (m *RpcConnHeader) GetSpanId() int64 {
	if m != nil && m.SpanId != nil {
		return *m.SpanId
	}
	return 0
}

func (m *RpcConnHeader) GetParentId() int64 {
	if m != nil && m.ParentId != nil {
		return *m.ParentId
	}
	return 0
}

type RequestHeader struct {
	ServiceType          *int32   `protobuf:"varint,1,opt,name=serviceType" json:"serviceType,omitempty"`
	ProtocolVer          *int32   `protobuf:"varint,2,opt,name=protocolVer" json:"protocolVer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestHeader) Reset()         { *m = RequestHeader{} }
func (m *RequestHeader) String() string { return proto.CompactTextString(m) }
func (*RequestHeader) ProtoMessage()    {}
func (*RequestHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_438fa73ead152342, []int{1}
}

func (m *RequestHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestHeader.Unmarshal(m, b)
}
func (m *RequestHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestHeader.Marshal(b, m, deterministic)
}
func (m *RequestHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestHeader.Merge(m, src)
}
func (m *RequestHeader) XXX_Size() int {
	return xxx_messageInfo_RequestHeader.Size(m)
}
func (m *RequestHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestHeader.DiscardUnknown(m)
}

var xxx_messageInfo_RequestHeader proto.InternalMessageInfo

func (m *RequestHeader) GetServiceType() int32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

func (m *RequestHeader) GetProtocolVer() int32 {
	if m != nil && m.ProtocolVer != nil {
		return *m.ProtocolVer
	}
	return 0
}

type RequestBody struct {
	Method               *int32   `protobuf:"varint,1,req,name=method" json:"method,omitempty"`
	Timeout              *int64   `protobuf:"varint,2,opt,name=timeout" json:"timeout,omitempty"`
	Request              []byte   `protobuf:"bytes,3,opt,name=request" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestBody) Reset()         { *m = RequestBody{} }
func (m *RequestBody) String() string { return proto.CompactTextString(m) }
func (*RequestBody) ProtoMessage()    {}
func (*RequestBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_438fa73ead152342, []int{2}
}

func (m *RequestBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestBody.Unmarshal(m, b)
}
func (m *RequestBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestBody.Marshal(b, m, deterministic)
}
func (m *RequestBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestBody.Merge(m, src)
}
func (m *RequestBody) XXX_Size() int {
	return xxx_messageInfo_RequestBody.Size(m)
}
func (m *RequestBody) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestBody.DiscardUnknown(m)
}

var xxx_messageInfo_RequestBody proto.InternalMessageInfo

func (m *RequestBody) GetMethod() int32 {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return 0
}

func (m *RequestBody) GetTimeout() int64 {
	if m != nil && m.Timeout != nil {
		return *m.Timeout
	}
	return 0
}

func (m *RequestBody) GetRequest() []byte {
	if m != nil {
		return m.Request
	}
	return nil
}

type ResponseHeader struct {
	Status               *ResponseHeader_Status `protobuf:"varint,1,req,name=status,enum=ResponseHeader_Status" json:"status,omitempty"`
	ServiceType          *int32                 `protobuf:"varint,2,opt,name=serviceType" json:"serviceType,omitempty"`
	ProtocolVer          *int32                 `protobuf:"varint,3,opt,name=protocolVer" json:"protocolVer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ResponseHeader) Reset()         { *m = ResponseHeader{} }
func (m *ResponseHeader) String() string { return proto.CompactTextString(m) }
func (*ResponseHeader) ProtoMessage()    {}
func (*ResponseHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_438fa73ead152342, []int{3}
}

func (m *ResponseHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseHeader.Unmarshal(m, b)
}
func (m *ResponseHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseHeader.Marshal(b, m, deterministic)
}
func (m *ResponseHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseHeader.Merge(m, src)
}
func (m *ResponseHeader) XXX_Size() int {
	return xxx_messageInfo_ResponseHeader.Size(m)
}
func (m *ResponseHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseHeader.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseHeader proto.InternalMessageInfo

func (m *ResponseHeader) GetStatus() ResponseHeader_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ResponseHeader_SUCCESS
}

func (m *ResponseHeader) GetServiceType() int32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

func (m *ResponseHeader) GetProtocolVer() int32 {
	if m != nil && m.ProtocolVer != nil {
		return *m.ProtocolVer
	}
	return 0
}

type RspExceptionBody struct {
	ExceptionName        *string  `protobuf:"bytes,1,req,name=exceptionName" json:"exceptionName,omitempty"`
	StackTrace           *string  `protobuf:"bytes,2,opt,name=stackTrace" json:"stackTrace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspExceptionBody) Reset()         { *m = RspExceptionBody{} }
func (m *RspExceptionBody) String() string { return proto.CompactTextString(m) }
func (*RspExceptionBody) ProtoMessage()    {}
func (*RspExceptionBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_438fa73ead152342, []int{4}
}

func (m *RspExceptionBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspExceptionBody.Unmarshal(m, b)
}
func (m *RspExceptionBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspExceptionBody.Marshal(b, m, deterministic)
}
func (m *RspExceptionBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspExceptionBody.Merge(m, src)
}
func (m *RspExceptionBody) XXX_Size() int {
	return xxx_messageInfo_RspExceptionBody.Size(m)
}
func (m *RspExceptionBody) XXX_DiscardUnknown() {
	xxx_messageInfo_RspExceptionBody.DiscardUnknown(m)
}

var xxx_messageInfo_RspExceptionBody proto.InternalMessageInfo

func (m *RspExceptionBody) GetExceptionName() string {
	if m != nil && m.ExceptionName != nil {
		return *m.ExceptionName
	}
	return ""
}

func (m *RspExceptionBody) GetStackTrace() string {
	if m != nil && m.StackTrace != nil {
		return *m.StackTrace
	}
	return ""
}

type RspResponseBody struct {
	Method               *int32   `protobuf:"varint,1,req,name=method" json:"method,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RspResponseBody) Reset()         { *m = RspResponseBody{} }
func (m *RspResponseBody) String() string { return proto.CompactTextString(m) }
func (*RspResponseBody) ProtoMessage()    {}
func (*RspResponseBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_438fa73ead152342, []int{5}
}

func (m *RspResponseBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RspResponseBody.Unmarshal(m, b)
}
func (m *RspResponseBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RspResponseBody.Marshal(b, m, deterministic)
}
func (m *RspResponseBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RspResponseBody.Merge(m, src)
}
func (m *RspResponseBody) XXX_Size() int {
	return xxx_messageInfo_RspResponseBody.Size(m)
}
func (m *RspResponseBody) XXX_DiscardUnknown() {
	xxx_messageInfo_RspResponseBody.DiscardUnknown(m)
}

var xxx_messageInfo_RspResponseBody proto.InternalMessageInfo

func (m *RspResponseBody) GetMethod() int32 {
	if m != nil && m.Method != nil {
		return *m.Method
	}
	return 0
}

func (m *RspResponseBody) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("ResponseHeader_Status", ResponseHeader_Status_name, ResponseHeader_Status_value)
	proto.RegisterType((*RpcConnHeader)(nil), "RpcConnHeader")
	proto.RegisterType((*RequestHeader)(nil), "RequestHeader")
	proto.RegisterType((*RequestBody)(nil), "RequestBody")
	proto.RegisterType((*ResponseHeader)(nil), "ResponseHeader")
	proto.RegisterType((*RspExceptionBody)(nil), "RspExceptionBody")
	proto.RegisterType((*RspResponseBody)(nil), "RspResponseBody")
}

func init() {
	proto.RegisterFile("RPC.proto", fileDescriptor_438fa73ead152342)
}

var fileDescriptor_438fa73ead152342 = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x59, 0xe7, 0x4f, 0xc9, 0xa4, 0x29, 0xd1, 0x1e, 0x2a, 0x8b, 0x03, 0xb2, 0x2c, 0x0e,
	0x91, 0x10, 0x7b, 0xe0, 0x8e, 0x50, 0x13, 0x05, 0x35, 0x12, 0x82, 0x6a, 0x1c, 0x10, 0x1c, 0x37,
	0xbb, 0xd3, 0x34, 0xa2, 0xf1, 0x6e, 0x76, 0xd7, 0x88, 0xbe, 0x0d, 0xaf, 0xc0, 0x1b, 0x22, 0xaf,
	0xed, 0x2a, 0x05, 0x89, 0xde, 0xe6, 0xfb, 0x66, 0x34, 0xfe, 0x7e, 0xeb, 0x81, 0x11, 0x5e, 0x2d,
	0x84, 0x75, 0x26, 0x98, 0xfc, 0x00, 0x13, 0xb4, 0x6a, 0x61, 0xca, 0xf2, 0x92, 0xa4, 0x26, 0xc7,
	0x39, 0xf4, 0xaf, 0x6f, 0xe5, 0x36, 0x65, 0x59, 0x32, 0x1b, 0x60, 0xac, 0x79, 0x0a, 0x27, 0xc1,
	0x49, 0x45, 0x2b, 0x9d, 0x26, 0x19, 0x9b, 0xf5, 0xb0, 0x93, 0xfc, 0x1c, 0x86, 0xde, 0xca, 0x72,
	0xa5, 0xd3, 0x5e, 0x6c, 0xb4, 0x8a, 0x3f, 0x87, 0xa7, 0x56, 0x3a, 0x2a, 0xc3, 0x4a, 0xa7, 0xfd,
	0xd8, 0xb9, 0xd7, 0x79, 0x01, 0x13, 0xa4, 0x43, 0x45, 0x3e, 0xb4, 0x9f, 0xcc, 0x60, 0xec, 0xc9,
	0xfd, 0xd8, 0x29, 0x5a, 0xdf, 0x59, 0x4a, 0x59, 0xc6, 0x66, 0x03, 0x3c, 0xb6, 0xea, 0x89, 0x18,
	0x57, 0x99, 0xdb, 0x2f, 0xe4, 0x62, 0x88, 0x01, 0x1e, 0x5b, 0xf9, 0x37, 0x18, 0xb7, 0x4b, 0xe7,
	0x46, 0xdf, 0xd5, 0xb9, 0xf6, 0x14, 0x6e, 0x8c, 0x6e, 0x39, 0x5a, 0x15, 0x49, 0x76, 0x7b, 0x32,
	0x55, 0xb8, 0x27, 0x69, 0x64, 0xdd, 0x71, 0xcd, 0x82, 0x88, 0x72, 0x8a, 0x9d, 0xcc, 0x7f, 0x33,
	0x38, 0x43, 0xf2, 0xd6, 0x94, 0x9e, 0xda, 0xc4, 0x02, 0x86, 0x3e, 0xc8, 0x50, 0xf9, 0xb8, 0xfe,
	0xec, 0xcd, 0xb9, 0x78, 0x38, 0x20, 0x8a, 0xd8, 0xc5, 0x76, 0xea, 0x6f, 0xc2, 0xe4, 0x51, 0xc2,
	0xde, 0xbf, 0x84, 0xaf, 0x60, 0xd8, 0x6c, 0xe5, 0x63, 0x38, 0x29, 0x3e, 0x2f, 0x16, 0xcb, 0xa2,
	0x98, 0x3e, 0xe1, 0x23, 0x18, 0x2c, 0x11, 0x3f, 0xe1, 0x94, 0xd5, 0xe5, 0xfb, 0x8b, 0xf5, 0xc5,
	0x87, 0x69, 0x92, 0x7f, 0x85, 0x29, 0x7a, 0xbb, 0xfc, 0xa9, 0xc8, 0x86, 0x9d, 0x29, 0xe3, 0x9b,
	0xbc, 0x84, 0x09, 0x75, 0xc6, 0x47, 0xb9, 0xa7, 0x98, 0x7d, 0x84, 0x0f, 0x4d, 0xfe, 0x02, 0xc0,
	0x07, 0xa9, 0xbe, 0xaf, 0xeb, 0x3f, 0x1c, 0x93, 0x8e, 0xf0, 0xc8, 0xc9, 0xdf, 0xc2, 0x33, 0xf4,
	0xb6, 0xc3, 0xfd, 0xef, 0x63, 0x73, 0xe8, 0x6b, 0x19, 0x64, 0x9a, 0x64, 0xc9, 0xec, 0x14, 0x63,
	0x3d, 0x7f, 0x07, 0xaf, 0x8d, 0xdb, 0x0a, 0x69, 0xa5, 0xba, 0x21, 0x11, 0xaa, 0x0d, 0xed, 0x0f,
	0x42, 0x19, 0x47, 0x1b, 0xe9, 0xa9, 0xb9, 0xc9, 0x4d, 0x75, 0x2d, 0xb6, 0x54, 0x92, 0x93, 0x81,
	0xf4, 0xbc, 0xbe, 0xd5, 0xab, 0xda, 0xf6, 0x97, 0xec, 0x17, 0x63, 0x7f, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x58, 0x26, 0xd7, 0x14, 0xbc, 0x02, 0x00, 0x00,
}
