// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MasterService.proto

package MasterService

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventProto struct {
	RebalanceId *int64 `protobuf:"varint,1,opt,name=rebalanceId" json:"rebalanceId,omitempty"`
	OpType      *int32 `protobuf:"varint,2,opt,name=opType" json:"opType,omitempty"`
	Status      *int32 `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	// consumerId@group-brokerId:host:port-topic:partitionId
	SubscribeInfo        []string `protobuf:"bytes,4,rep,name=subscribeInfo" json:"subscribeInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventProto) Reset()         { *m = EventProto{} }
func (m *EventProto) String() string { return proto.CompactTextString(m) }
func (*EventProto) ProtoMessage()    {}
func (*EventProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{0}
}

func (m *EventProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventProto.Unmarshal(m, b)
}
func (m *EventProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventProto.Marshal(b, m, deterministic)
}
func (m *EventProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventProto.Merge(m, src)
}
func (m *EventProto) XXX_Size() int {
	return xxx_messageInfo_EventProto.Size(m)
}
func (m *EventProto) XXX_DiscardUnknown() {
	xxx_messageInfo_EventProto.DiscardUnknown(m)
}

var xxx_messageInfo_EventProto proto.InternalMessageInfo

func (m *EventProto) GetRebalanceId() int64 {
	if m != nil && m.RebalanceId != nil {
		return *m.RebalanceId
	}
	return 0
}

func (m *EventProto) GetOpType() int32 {
	if m != nil && m.OpType != nil {
		return *m.OpType
	}
	return 0
}

func (m *EventProto) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *EventProto) GetSubscribeInfo() []string {
	if m != nil {
		return m.SubscribeInfo
	}
	return nil
}

type EnableBrokerFunInfo struct {
	EnableConsumeAuthenticate *bool    `protobuf:"varint,1,req,name=enableConsumeAuthenticate" json:"enableConsumeAuthenticate,omitempty"`
	EnableConsumeAuthorize    *bool    `protobuf:"varint,2,req,name=enableConsumeAuthorize" json:"enableConsumeAuthorize,omitempty"`
	EnableProduceAuthenticate *bool    `protobuf:"varint,3,req,name=enableProduceAuthenticate" json:"enableProduceAuthenticate,omitempty"`
	EnableProduceAuthorize    *bool    `protobuf:"varint,4,req,name=enableProduceAuthorize" json:"enableProduceAuthorize,omitempty"`
	EnableVisitTokenCheck     *bool    `protobuf:"varint,5,opt,name=enableVisitTokenCheck" json:"enableVisitTokenCheck,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *EnableBrokerFunInfo) Reset()         { *m = EnableBrokerFunInfo{} }
func (m *EnableBrokerFunInfo) String() string { return proto.CompactTextString(m) }
func (*EnableBrokerFunInfo) ProtoMessage()    {}
func (*EnableBrokerFunInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{1}
}

func (m *EnableBrokerFunInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnableBrokerFunInfo.Unmarshal(m, b)
}
func (m *EnableBrokerFunInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnableBrokerFunInfo.Marshal(b, m, deterministic)
}
func (m *EnableBrokerFunInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnableBrokerFunInfo.Merge(m, src)
}
func (m *EnableBrokerFunInfo) XXX_Size() int {
	return xxx_messageInfo_EnableBrokerFunInfo.Size(m)
}
func (m *EnableBrokerFunInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EnableBrokerFunInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EnableBrokerFunInfo proto.InternalMessageInfo

func (m *EnableBrokerFunInfo) GetEnableConsumeAuthenticate() bool {
	if m != nil && m.EnableConsumeAuthenticate != nil {
		return *m.EnableConsumeAuthenticate
	}
	return false
}

func (m *EnableBrokerFunInfo) GetEnableConsumeAuthorize() bool {
	if m != nil && m.EnableConsumeAuthorize != nil {
		return *m.EnableConsumeAuthorize
	}
	return false
}

func (m *EnableBrokerFunInfo) GetEnableProduceAuthenticate() bool {
	if m != nil && m.EnableProduceAuthenticate != nil {
		return *m.EnableProduceAuthenticate
	}
	return false
}

func (m *EnableBrokerFunInfo) GetEnableProduceAuthorize() bool {
	if m != nil && m.EnableProduceAuthorize != nil {
		return *m.EnableProduceAuthorize
	}
	return false
}

func (m *EnableBrokerFunInfo) GetEnableVisitTokenCheck() bool {
	if m != nil && m.EnableVisitTokenCheck != nil {
		return *m.EnableVisitTokenCheck
	}
	return false
}

type AuthenticateInfo struct {
	UserName             *string  `protobuf:"bytes,1,req,name=userName" json:"userName,omitempty"`
	Timestamp            *int64   `protobuf:"varint,2,req,name=timestamp" json:"timestamp,omitempty"`
	Nonce                *int32   `protobuf:"varint,3,req,name=nonce" json:"nonce,omitempty"`
	OthParams            *string  `protobuf:"bytes,4,req,name=othParams" json:"othParams,omitempty"`
	Signature            *string  `protobuf:"bytes,5,req,name=signature" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthenticateInfo) Reset()         { *m = AuthenticateInfo{} }
func (m *AuthenticateInfo) String() string { return proto.CompactTextString(m) }
func (*AuthenticateInfo) ProtoMessage()    {}
func (*AuthenticateInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{2}
}

func (m *AuthenticateInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthenticateInfo.Unmarshal(m, b)
}
func (m *AuthenticateInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthenticateInfo.Marshal(b, m, deterministic)
}
func (m *AuthenticateInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthenticateInfo.Merge(m, src)
}
func (m *AuthenticateInfo) XXX_Size() int {
	return xxx_messageInfo_AuthenticateInfo.Size(m)
}
func (m *AuthenticateInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthenticateInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AuthenticateInfo proto.InternalMessageInfo

func (m *AuthenticateInfo) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *AuthenticateInfo) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *AuthenticateInfo) GetNonce() int32 {
	if m != nil && m.Nonce != nil {
		return *m.Nonce
	}
	return 0
}

func (m *AuthenticateInfo) GetOthParams() string {
	if m != nil && m.OthParams != nil {
		return *m.OthParams
	}
	return ""
}

func (m *AuthenticateInfo) GetSignature() string {
	if m != nil && m.Signature != nil {
		return *m.Signature
	}
	return ""
}

type MasterCertificateInfo struct {
	AuthInfo             *AuthenticateInfo `protobuf:"bytes,1,opt,name=authInfo" json:"authInfo,omitempty"`
	AuthorizedToken      *string           `protobuf:"bytes,2,opt,name=authorizedToken" json:"authorizedToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MasterCertificateInfo) Reset()         { *m = MasterCertificateInfo{} }
func (m *MasterCertificateInfo) String() string { return proto.CompactTextString(m) }
func (*MasterCertificateInfo) ProtoMessage()    {}
func (*MasterCertificateInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{3}
}

func (m *MasterCertificateInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MasterCertificateInfo.Unmarshal(m, b)
}
func (m *MasterCertificateInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MasterCertificateInfo.Marshal(b, m, deterministic)
}
func (m *MasterCertificateInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MasterCertificateInfo.Merge(m, src)
}
func (m *MasterCertificateInfo) XXX_Size() int {
	return xxx_messageInfo_MasterCertificateInfo.Size(m)
}
func (m *MasterCertificateInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MasterCertificateInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MasterCertificateInfo proto.InternalMessageInfo

func (m *MasterCertificateInfo) GetAuthInfo() *AuthenticateInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

func (m *MasterCertificateInfo) GetAuthorizedToken() string {
	if m != nil && m.AuthorizedToken != nil {
		return *m.AuthorizedToken
	}
	return ""
}

type MasterAuthorizedInfo struct {
	VisitAuthorizedToken *int64   `protobuf:"varint,1,req,name=visitAuthorizedToken" json:"visitAuthorizedToken,omitempty"`
	AuthAuthorizedToken  *string  `protobuf:"bytes,2,opt,name=authAuthorizedToken" json:"authAuthorizedToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MasterAuthorizedInfo) Reset()         { *m = MasterAuthorizedInfo{} }
func (m *MasterAuthorizedInfo) String() string { return proto.CompactTextString(m) }
func (*MasterAuthorizedInfo) ProtoMessage()    {}
func (*MasterAuthorizedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{4}
}

func (m *MasterAuthorizedInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MasterAuthorizedInfo.Unmarshal(m, b)
}
func (m *MasterAuthorizedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MasterAuthorizedInfo.Marshal(b, m, deterministic)
}
func (m *MasterAuthorizedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MasterAuthorizedInfo.Merge(m, src)
}
func (m *MasterAuthorizedInfo) XXX_Size() int {
	return xxx_messageInfo_MasterAuthorizedInfo.Size(m)
}
func (m *MasterAuthorizedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MasterAuthorizedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MasterAuthorizedInfo proto.InternalMessageInfo

func (m *MasterAuthorizedInfo) GetVisitAuthorizedToken() int64 {
	if m != nil && m.VisitAuthorizedToken != nil {
		return *m.VisitAuthorizedToken
	}
	return 0
}

func (m *MasterAuthorizedInfo) GetAuthAuthorizedToken() string {
	if m != nil && m.AuthAuthorizedToken != nil {
		return *m.AuthAuthorizedToken
	}
	return ""
}

type MasterBrokerAuthorizedInfo struct {
	VisitAuthorizedToken *string  `protobuf:"bytes,1,req,name=visitAuthorizedToken" json:"visitAuthorizedToken,omitempty"`
	AuthAuthorizedToken  *string  `protobuf:"bytes,2,opt,name=authAuthorizedToken" json:"authAuthorizedToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MasterBrokerAuthorizedInfo) Reset()         { *m = MasterBrokerAuthorizedInfo{} }
func (m *MasterBrokerAuthorizedInfo) String() string { return proto.CompactTextString(m) }
func (*MasterBrokerAuthorizedInfo) ProtoMessage()    {}
func (*MasterBrokerAuthorizedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{5}
}

func (m *MasterBrokerAuthorizedInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MasterBrokerAuthorizedInfo.Unmarshal(m, b)
}
func (m *MasterBrokerAuthorizedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MasterBrokerAuthorizedInfo.Marshal(b, m, deterministic)
}
func (m *MasterBrokerAuthorizedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MasterBrokerAuthorizedInfo.Merge(m, src)
}
func (m *MasterBrokerAuthorizedInfo) XXX_Size() int {
	return xxx_messageInfo_MasterBrokerAuthorizedInfo.Size(m)
}
func (m *MasterBrokerAuthorizedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MasterBrokerAuthorizedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MasterBrokerAuthorizedInfo proto.InternalMessageInfo

func (m *MasterBrokerAuthorizedInfo) GetVisitAuthorizedToken() string {
	if m != nil && m.VisitAuthorizedToken != nil {
		return *m.VisitAuthorizedToken
	}
	return ""
}

func (m *MasterBrokerAuthorizedInfo) GetAuthAuthorizedToken() string {
	if m != nil && m.AuthAuthorizedToken != nil {
		return *m.AuthAuthorizedToken
	}
	return ""
}

type RegisterRequestP2M struct {
	ClientId             *string                `protobuf:"bytes,1,req,name=clientId" json:"clientId,omitempty"`
	TopicList            []string               `protobuf:"bytes,2,rep,name=topicList" json:"topicList,omitempty"`
	BrokerCheckSum       *int64                 `protobuf:"varint,3,req,name=brokerCheckSum" json:"brokerCheckSum,omitempty"`
	HostName             *string                `protobuf:"bytes,4,req,name=hostName" json:"hostName,omitempty"`
	AuthInfo             *MasterCertificateInfo `protobuf:"bytes,5,opt,name=authInfo" json:"authInfo,omitempty"`
	JdkVersion           *string                `protobuf:"bytes,6,opt,name=jdkVersion" json:"jdkVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RegisterRequestP2M) Reset()         { *m = RegisterRequestP2M{} }
func (m *RegisterRequestP2M) String() string { return proto.CompactTextString(m) }
func (*RegisterRequestP2M) ProtoMessage()    {}
func (*RegisterRequestP2M) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{6}
}

func (m *RegisterRequestP2M) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequestP2M.Unmarshal(m, b)
}
func (m *RegisterRequestP2M) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequestP2M.Marshal(b, m, deterministic)
}
func (m *RegisterRequestP2M) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequestP2M.Merge(m, src)
}
func (m *RegisterRequestP2M) XXX_Size() int {
	return xxx_messageInfo_RegisterRequestP2M.Size(m)
}
func (m *RegisterRequestP2M) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequestP2M.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequestP2M proto.InternalMessageInfo

func (m *RegisterRequestP2M) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *RegisterRequestP2M) GetTopicList() []string {
	if m != nil {
		return m.TopicList
	}
	return nil
}

func (m *RegisterRequestP2M) GetBrokerCheckSum() int64 {
	if m != nil && m.BrokerCheckSum != nil {
		return *m.BrokerCheckSum
	}
	return 0
}

func (m *RegisterRequestP2M) GetHostName() string {
	if m != nil && m.HostName != nil {
		return *m.HostName
	}
	return ""
}

func (m *RegisterRequestP2M) GetAuthInfo() *MasterCertificateInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

func (m *RegisterRequestP2M) GetJdkVersion() string {
	if m != nil && m.JdkVersion != nil {
		return *m.JdkVersion
	}
	return ""
}

type RegisterResponseM2P struct {
	Success              *bool                 `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	ErrCode              *int32                `protobuf:"varint,2,req,name=errCode" json:"errCode,omitempty"`
	ErrMsg               *string               `protobuf:"bytes,3,req,name=errMsg" json:"errMsg,omitempty"`
	BrokerCheckSum       *int64                `protobuf:"varint,4,req,name=brokerCheckSum" json:"brokerCheckSum,omitempty"`
	BrokerInfos          []string              `protobuf:"bytes,5,rep,name=brokerInfos" json:"brokerInfos,omitempty"`
	AuthorizedInfo       *MasterAuthorizedInfo `protobuf:"bytes,6,opt,name=authorizedInfo" json:"authorizedInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RegisterResponseM2P) Reset()         { *m = RegisterResponseM2P{} }
func (m *RegisterResponseM2P) String() string { return proto.CompactTextString(m) }
func (*RegisterResponseM2P) ProtoMessage()    {}
func (*RegisterResponseM2P) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{7}
}

func (m *RegisterResponseM2P) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponseM2P.Unmarshal(m, b)
}
func (m *RegisterResponseM2P) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponseM2P.Marshal(b, m, deterministic)
}
func (m *RegisterResponseM2P) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponseM2P.Merge(m, src)
}
func (m *RegisterResponseM2P) XXX_Size() int {
	return xxx_messageInfo_RegisterResponseM2P.Size(m)
}
func (m *RegisterResponseM2P) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponseM2P.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponseM2P proto.InternalMessageInfo

func (m *RegisterResponseM2P) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *RegisterResponseM2P) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *RegisterResponseM2P) GetErrMsg() string {
	if m != nil && m.ErrMsg != nil {
		return *m.ErrMsg
	}
	return ""
}

func (m *RegisterResponseM2P) GetBrokerCheckSum() int64 {
	if m != nil && m.BrokerCheckSum != nil {
		return *m.BrokerCheckSum
	}
	return 0
}

func (m *RegisterResponseM2P) GetBrokerInfos() []string {
	if m != nil {
		return m.BrokerInfos
	}
	return nil
}

func (m *RegisterResponseM2P) GetAuthorizedInfo() *MasterAuthorizedInfo {
	if m != nil {
		return m.AuthorizedInfo
	}
	return nil
}

type HeartRequestP2M struct {
	ClientId             *string                `protobuf:"bytes,1,req,name=clientId" json:"clientId,omitempty"`
	BrokerCheckSum       *int64                 `protobuf:"varint,2,req,name=brokerCheckSum" json:"brokerCheckSum,omitempty"`
	HostName             *string                `protobuf:"bytes,3,req,name=hostName" json:"hostName,omitempty"`
	TopicList            []string               `protobuf:"bytes,4,rep,name=topicList" json:"topicList,omitempty"`
	AuthInfo             *MasterCertificateInfo `protobuf:"bytes,5,opt,name=authInfo" json:"authInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *HeartRequestP2M) Reset()         { *m = HeartRequestP2M{} }
func (m *HeartRequestP2M) String() string { return proto.CompactTextString(m) }
func (*HeartRequestP2M) ProtoMessage()    {}
func (*HeartRequestP2M) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{8}
}

func (m *HeartRequestP2M) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartRequestP2M.Unmarshal(m, b)
}
func (m *HeartRequestP2M) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartRequestP2M.Marshal(b, m, deterministic)
}
func (m *HeartRequestP2M) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartRequestP2M.Merge(m, src)
}
func (m *HeartRequestP2M) XXX_Size() int {
	return xxx_messageInfo_HeartRequestP2M.Size(m)
}
func (m *HeartRequestP2M) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartRequestP2M.DiscardUnknown(m)
}

var xxx_messageInfo_HeartRequestP2M proto.InternalMessageInfo

func (m *HeartRequestP2M) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *HeartRequestP2M) GetBrokerCheckSum() int64 {
	if m != nil && m.BrokerCheckSum != nil {
		return *m.BrokerCheckSum
	}
	return 0
}

func (m *HeartRequestP2M) GetHostName() string {
	if m != nil && m.HostName != nil {
		return *m.HostName
	}
	return ""
}

func (m *HeartRequestP2M) GetTopicList() []string {
	if m != nil {
		return m.TopicList
	}
	return nil
}

func (m *HeartRequestP2M) GetAuthInfo() *MasterCertificateInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

type HeartResponseM2P struct {
	Success        *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	ErrCode        *int32  `protobuf:"varint,2,req,name=errCode" json:"errCode,omitempty"`
	ErrMsg         *string `protobuf:"bytes,3,req,name=errMsg" json:"errMsg,omitempty"`
	BrokerCheckSum *int64  `protobuf:"varint,4,req,name=brokerCheckSum" json:"brokerCheckSum,omitempty"`
	// brokerId:host:port-topic:partitionNum
	TopicInfos           []string              `protobuf:"bytes,5,rep,name=topicInfos" json:"topicInfos,omitempty"`
	BrokerInfos          []string              `protobuf:"bytes,6,rep,name=brokerInfos" json:"brokerInfos,omitempty"`
	RequireAuth          *bool                 `protobuf:"varint,7,opt,name=requireAuth" json:"requireAuth,omitempty"`
	AuthorizedInfo       *MasterAuthorizedInfo `protobuf:"bytes,8,opt,name=authorizedInfo" json:"authorizedInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *HeartResponseM2P) Reset()         { *m = HeartResponseM2P{} }
func (m *HeartResponseM2P) String() string { return proto.CompactTextString(m) }
func (*HeartResponseM2P) ProtoMessage()    {}
func (*HeartResponseM2P) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{9}
}

func (m *HeartResponseM2P) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartResponseM2P.Unmarshal(m, b)
}
func (m *HeartResponseM2P) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartResponseM2P.Marshal(b, m, deterministic)
}
func (m *HeartResponseM2P) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartResponseM2P.Merge(m, src)
}
func (m *HeartResponseM2P) XXX_Size() int {
	return xxx_messageInfo_HeartResponseM2P.Size(m)
}
func (m *HeartResponseM2P) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartResponseM2P.DiscardUnknown(m)
}

var xxx_messageInfo_HeartResponseM2P proto.InternalMessageInfo

func (m *HeartResponseM2P) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *HeartResponseM2P) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *HeartResponseM2P) GetErrMsg() string {
	if m != nil && m.ErrMsg != nil {
		return *m.ErrMsg
	}
	return ""
}

func (m *HeartResponseM2P) GetBrokerCheckSum() int64 {
	if m != nil && m.BrokerCheckSum != nil {
		return *m.BrokerCheckSum
	}
	return 0
}

func (m *HeartResponseM2P) GetTopicInfos() []string {
	if m != nil {
		return m.TopicInfos
	}
	return nil
}

func (m *HeartResponseM2P) GetBrokerInfos() []string {
	if m != nil {
		return m.BrokerInfos
	}
	return nil
}

func (m *HeartResponseM2P) GetRequireAuth() bool {
	if m != nil && m.RequireAuth != nil {
		return *m.RequireAuth
	}
	return false
}

func (m *HeartResponseM2P) GetAuthorizedInfo() *MasterAuthorizedInfo {
	if m != nil {
		return m.AuthorizedInfo
	}
	return nil
}

type CloseRequestP2M struct {
	ClientId             *string                `protobuf:"bytes,1,req,name=clientId" json:"clientId,omitempty"`
	AuthInfo             *MasterCertificateInfo `protobuf:"bytes,2,opt,name=authInfo" json:"authInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CloseRequestP2M) Reset()         { *m = CloseRequestP2M{} }
func (m *CloseRequestP2M) String() string { return proto.CompactTextString(m) }
func (*CloseRequestP2M) ProtoMessage()    {}
func (*CloseRequestP2M) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{10}
}

func (m *CloseRequestP2M) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRequestP2M.Unmarshal(m, b)
}
func (m *CloseRequestP2M) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRequestP2M.Marshal(b, m, deterministic)
}
func (m *CloseRequestP2M) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRequestP2M.Merge(m, src)
}
func (m *CloseRequestP2M) XXX_Size() int {
	return xxx_messageInfo_CloseRequestP2M.Size(m)
}
func (m *CloseRequestP2M) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRequestP2M.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRequestP2M proto.InternalMessageInfo

func (m *CloseRequestP2M) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *CloseRequestP2M) GetAuthInfo() *MasterCertificateInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

type CloseResponseM2P struct {
	Success              *bool    `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	ErrCode              *int32   `protobuf:"varint,2,req,name=errCode" json:"errCode,omitempty"`
	ErrMsg               *string  `protobuf:"bytes,3,req,name=errMsg" json:"errMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseResponseM2P) Reset()         { *m = CloseResponseM2P{} }
func (m *CloseResponseM2P) String() string { return proto.CompactTextString(m) }
func (*CloseResponseM2P) ProtoMessage()    {}
func (*CloseResponseM2P) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{11}
}

func (m *CloseResponseM2P) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseResponseM2P.Unmarshal(m, b)
}
func (m *CloseResponseM2P) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseResponseM2P.Marshal(b, m, deterministic)
}
func (m *CloseResponseM2P) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseResponseM2P.Merge(m, src)
}
func (m *CloseResponseM2P) XXX_Size() int {
	return xxx_messageInfo_CloseResponseM2P.Size(m)
}
func (m *CloseResponseM2P) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseResponseM2P.DiscardUnknown(m)
}

var xxx_messageInfo_CloseResponseM2P proto.InternalMessageInfo

func (m *CloseResponseM2P) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *CloseResponseM2P) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *CloseResponseM2P) GetErrMsg() string {
	if m != nil && m.ErrMsg != nil {
		return *m.ErrMsg
	}
	return ""
}

type RegisterRequestC2M struct {
	ClientId  *string  `protobuf:"bytes,1,req,name=clientId" json:"clientId,omitempty"`
	GroupName *string  `protobuf:"bytes,2,req,name=groupName" json:"groupName,omitempty"`
	HostName  *string  `protobuf:"bytes,3,req,name=hostName" json:"hostName,omitempty"`
	TopicList []string `protobuf:"bytes,4,rep,name=topicList" json:"topicList,omitempty"`
	// consumerId@group-brokerId:host:port-topic:partitionId
	SubscribeInfo        []string               `protobuf:"bytes,5,rep,name=subscribeInfo" json:"subscribeInfo,omitempty"`
	TopicCondition       []string               `protobuf:"bytes,6,rep,name=topicCondition" json:"topicCondition,omitempty"`
	RequireBound         *bool                  `protobuf:"varint,7,opt,name=requireBound" json:"requireBound,omitempty"`
	SessionTime          *int64                 `protobuf:"varint,8,opt,name=sessionTime" json:"sessionTime,omitempty"`
	SessionKey           *string                `protobuf:"bytes,9,opt,name=sessionKey" json:"sessionKey,omitempty"`
	TotalCount           *int32                 `protobuf:"varint,10,opt,name=totalCount" json:"totalCount,omitempty"`
	RequiredPartition    *string                `protobuf:"bytes,11,opt,name=requiredPartition" json:"requiredPartition,omitempty"`
	NotAllocated         *bool                  `protobuf:"varint,12,opt,name=notAllocated" json:"notAllocated,omitempty"`
	SelectBig            *bool                  `protobuf:"varint,13,opt,name=selectBig" json:"selectBig,omitempty"`
	GroupFlowCheckId     *int64                 `protobuf:"varint,14,opt,name=groupFlowCheckId" json:"groupFlowCheckId,omitempty"`
	DefFlowCheckId       *int64                 `protobuf:"varint,15,opt,name=defFlowCheckId" json:"defFlowCheckId,omitempty"`
	SsdStoreId           *int64                 `protobuf:"varint,16,opt,name=ssdStoreId" json:"ssdStoreId,omitempty"`
	QryPriorityId        *int32                 `protobuf:"varint,17,opt,name=qryPriorityId" json:"qryPriorityId,omitempty"`
	AuthInfo             *MasterCertificateInfo `protobuf:"bytes,18,opt,name=authInfo" json:"authInfo,omitempty"`
	JdkVersion           *string                `protobuf:"bytes,19,opt,name=jdkVersion" json:"jdkVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RegisterRequestC2M) Reset()         { *m = RegisterRequestC2M{} }
func (m *RegisterRequestC2M) String() string { return proto.CompactTextString(m) }
func (*RegisterRequestC2M) ProtoMessage()    {}
func (*RegisterRequestC2M) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{12}
}

func (m *RegisterRequestC2M) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequestC2M.Unmarshal(m, b)
}
func (m *RegisterRequestC2M) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequestC2M.Marshal(b, m, deterministic)
}
func (m *RegisterRequestC2M) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequestC2M.Merge(m, src)
}
func (m *RegisterRequestC2M) XXX_Size() int {
	return xxx_messageInfo_RegisterRequestC2M.Size(m)
}
func (m *RegisterRequestC2M) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequestC2M.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequestC2M proto.InternalMessageInfo

func (m *RegisterRequestC2M) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *RegisterRequestC2M) GetGroupName() string {
	if m != nil && m.GroupName != nil {
		return *m.GroupName
	}
	return ""
}

func (m *RegisterRequestC2M) GetHostName() string {
	if m != nil && m.HostName != nil {
		return *m.HostName
	}
	return ""
}

func (m *RegisterRequestC2M) GetTopicList() []string {
	if m != nil {
		return m.TopicList
	}
	return nil
}

func (m *RegisterRequestC2M) GetSubscribeInfo() []string {
	if m != nil {
		return m.SubscribeInfo
	}
	return nil
}

func (m *RegisterRequestC2M) GetTopicCondition() []string {
	if m != nil {
		return m.TopicCondition
	}
	return nil
}

func (m *RegisterRequestC2M) GetRequireBound() bool {
	if m != nil && m.RequireBound != nil {
		return *m.RequireBound
	}
	return false
}

func (m *RegisterRequestC2M) GetSessionTime() int64 {
	if m != nil && m.SessionTime != nil {
		return *m.SessionTime
	}
	return 0
}

func (m *RegisterRequestC2M) GetSessionKey() string {
	if m != nil && m.SessionKey != nil {
		return *m.SessionKey
	}
	return ""
}

func (m *RegisterRequestC2M) GetTotalCount() int32 {
	if m != nil && m.TotalCount != nil {
		return *m.TotalCount
	}
	return 0
}

func (m *RegisterRequestC2M) GetRequiredPartition() string {
	if m != nil && m.RequiredPartition != nil {
		return *m.RequiredPartition
	}
	return ""
}

func (m *RegisterRequestC2M) GetNotAllocated() bool {
	if m != nil && m.NotAllocated != nil {
		return *m.NotAllocated
	}
	return false
}

func (m *RegisterRequestC2M) GetSelectBig() bool {
	if m != nil && m.SelectBig != nil {
		return *m.SelectBig
	}
	return false
}

func (m *RegisterRequestC2M) GetGroupFlowCheckId() int64 {
	if m != nil && m.GroupFlowCheckId != nil {
		return *m.GroupFlowCheckId
	}
	return 0
}

func (m *RegisterRequestC2M) GetDefFlowCheckId() int64 {
	if m != nil && m.DefFlowCheckId != nil {
		return *m.DefFlowCheckId
	}
	return 0
}

func (m *RegisterRequestC2M) GetSsdStoreId() int64 {
	if m != nil && m.SsdStoreId != nil {
		return *m.SsdStoreId
	}
	return 0
}

func (m *RegisterRequestC2M) GetQryPriorityId() int32 {
	if m != nil && m.QryPriorityId != nil {
		return *m.QryPriorityId
	}
	return 0
}

func (m *RegisterRequestC2M) GetAuthInfo() *MasterCertificateInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

func (m *RegisterRequestC2M) GetJdkVersion() string {
	if m != nil && m.JdkVersion != nil {
		return *m.JdkVersion
	}
	return ""
}

type RegisterResponseM2C struct {
	Success *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	ErrCode *int32  `protobuf:"varint,2,req,name=errCode" json:"errCode,omitempty"`
	ErrMsg  *string `protobuf:"bytes,3,req,name=errMsg" json:"errMsg,omitempty"`
	// brokerId:host:port-topic:partitionNum
	TopicInfo            []string              `protobuf:"bytes,4,rep,name=topicInfo" json:"topicInfo,omitempty"`
	NotAllocated         *bool                 `protobuf:"varint,5,opt,name=notAllocated" json:"notAllocated,omitempty"`
	DefFlowCheckId       *int64                `protobuf:"varint,6,opt,name=defFlowCheckId" json:"defFlowCheckId,omitempty"`
	DefFlowControlInfo   *string               `protobuf:"bytes,7,opt,name=defFlowControlInfo" json:"defFlowControlInfo,omitempty"`
	GroupFlowCheckId     *int64                `protobuf:"varint,8,opt,name=groupFlowCheckId" json:"groupFlowCheckId,omitempty"`
	GroupFlowControlInfo *string               `protobuf:"bytes,9,opt,name=groupFlowControlInfo" json:"groupFlowControlInfo,omitempty"`
	SsdStoreId           *int64                `protobuf:"varint,10,opt,name=ssdStoreId" json:"ssdStoreId,omitempty"`
	QryPriorityId        *int32                `protobuf:"varint,11,opt,name=qryPriorityId" json:"qryPriorityId,omitempty"`
	AuthorizedInfo       *MasterAuthorizedInfo `protobuf:"bytes,12,opt,name=authorizedInfo" json:"authorizedInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RegisterResponseM2C) Reset()         { *m = RegisterResponseM2C{} }
func (m *RegisterResponseM2C) String() string { return proto.CompactTextString(m) }
func (*RegisterResponseM2C) ProtoMessage()    {}
func (*RegisterResponseM2C) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{13}
}

func (m *RegisterResponseM2C) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponseM2C.Unmarshal(m, b)
}
func (m *RegisterResponseM2C) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponseM2C.Marshal(b, m, deterministic)
}
func (m *RegisterResponseM2C) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponseM2C.Merge(m, src)
}
func (m *RegisterResponseM2C) XXX_Size() int {
	return xxx_messageInfo_RegisterResponseM2C.Size(m)
}
func (m *RegisterResponseM2C) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponseM2C.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponseM2C proto.InternalMessageInfo

func (m *RegisterResponseM2C) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *RegisterResponseM2C) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *RegisterResponseM2C) GetErrMsg() string {
	if m != nil && m.ErrMsg != nil {
		return *m.ErrMsg
	}
	return ""
}

func (m *RegisterResponseM2C) GetTopicInfo() []string {
	if m != nil {
		return m.TopicInfo
	}
	return nil
}

func (m *RegisterResponseM2C) GetNotAllocated() bool {
	if m != nil && m.NotAllocated != nil {
		return *m.NotAllocated
	}
	return false
}

func (m *RegisterResponseM2C) GetDefFlowCheckId() int64 {
	if m != nil && m.DefFlowCheckId != nil {
		return *m.DefFlowCheckId
	}
	return 0
}

func (m *RegisterResponseM2C) GetDefFlowControlInfo() string {
	if m != nil && m.DefFlowControlInfo != nil {
		return *m.DefFlowControlInfo
	}
	return ""
}

func (m *RegisterResponseM2C) GetGroupFlowCheckId() int64 {
	if m != nil && m.GroupFlowCheckId != nil {
		return *m.GroupFlowCheckId
	}
	return 0
}

func (m *RegisterResponseM2C) GetGroupFlowControlInfo() string {
	if m != nil && m.GroupFlowControlInfo != nil {
		return *m.GroupFlowControlInfo
	}
	return ""
}

func (m *RegisterResponseM2C) GetSsdStoreId() int64 {
	if m != nil && m.SsdStoreId != nil {
		return *m.SsdStoreId
	}
	return 0
}

func (m *RegisterResponseM2C) GetQryPriorityId() int32 {
	if m != nil && m.QryPriorityId != nil {
		return *m.QryPriorityId
	}
	return 0
}

func (m *RegisterResponseM2C) GetAuthorizedInfo() *MasterAuthorizedInfo {
	if m != nil {
		return m.AuthorizedInfo
	}
	return nil
}

type HeartRequestC2M struct {
	ClientId             *string                `protobuf:"bytes,1,req,name=clientId" json:"clientId,omitempty"`
	GroupName            *string                `protobuf:"bytes,2,req,name=groupName" json:"groupName,omitempty"`
	SubscribeInfo        []string               `protobuf:"bytes,3,rep,name=subscribeInfo" json:"subscribeInfo,omitempty"`
	ReportSubscribeInfo  *bool                  `protobuf:"varint,4,req,name=reportSubscribeInfo" json:"reportSubscribeInfo,omitempty"`
	Event                *EventProto            `protobuf:"bytes,5,opt,name=event" json:"event,omitempty"`
	DefFlowCheckId       *int64                 `protobuf:"varint,6,opt,name=defFlowCheckId" json:"defFlowCheckId,omitempty"`
	GroupFlowCheckId     *int64                 `protobuf:"varint,7,opt,name=groupFlowCheckId" json:"groupFlowCheckId,omitempty"`
	SsdStoreId           *int64                 `protobuf:"varint,8,opt,name=ssdStoreId" json:"ssdStoreId,omitempty"`
	QryPriorityId        *int32                 `protobuf:"varint,9,opt,name=qryPriorityId" json:"qryPriorityId,omitempty"`
	AuthInfo             *MasterCertificateInfo `protobuf:"bytes,10,opt,name=authInfo" json:"authInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *HeartRequestC2M) Reset()         { *m = HeartRequestC2M{} }
func (m *HeartRequestC2M) String() string { return proto.CompactTextString(m) }
func (*HeartRequestC2M) ProtoMessage()    {}
func (*HeartRequestC2M) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{14}
}

func (m *HeartRequestC2M) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartRequestC2M.Unmarshal(m, b)
}
func (m *HeartRequestC2M) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartRequestC2M.Marshal(b, m, deterministic)
}
func (m *HeartRequestC2M) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartRequestC2M.Merge(m, src)
}
func (m *HeartRequestC2M) XXX_Size() int {
	return xxx_messageInfo_HeartRequestC2M.Size(m)
}
func (m *HeartRequestC2M) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartRequestC2M.DiscardUnknown(m)
}

var xxx_messageInfo_HeartRequestC2M proto.InternalMessageInfo

func (m *HeartRequestC2M) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *HeartRequestC2M) GetGroupName() string {
	if m != nil && m.GroupName != nil {
		return *m.GroupName
	}
	return ""
}

func (m *HeartRequestC2M) GetSubscribeInfo() []string {
	if m != nil {
		return m.SubscribeInfo
	}
	return nil
}

func (m *HeartRequestC2M) GetReportSubscribeInfo() bool {
	if m != nil && m.ReportSubscribeInfo != nil {
		return *m.ReportSubscribeInfo
	}
	return false
}

func (m *HeartRequestC2M) GetEvent() *EventProto {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *HeartRequestC2M) GetDefFlowCheckId() int64 {
	if m != nil && m.DefFlowCheckId != nil {
		return *m.DefFlowCheckId
	}
	return 0
}

func (m *HeartRequestC2M) GetGroupFlowCheckId() int64 {
	if m != nil && m.GroupFlowCheckId != nil {
		return *m.GroupFlowCheckId
	}
	return 0
}

func (m *HeartRequestC2M) GetSsdStoreId() int64 {
	if m != nil && m.SsdStoreId != nil {
		return *m.SsdStoreId
	}
	return 0
}

func (m *HeartRequestC2M) GetQryPriorityId() int32 {
	if m != nil && m.QryPriorityId != nil {
		return *m.QryPriorityId
	}
	return 0
}

func (m *HeartRequestC2M) GetAuthInfo() *MasterCertificateInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

type HeartResponseM2C struct {
	Success              *bool                 `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	ErrCode              *int32                `protobuf:"varint,2,req,name=errCode" json:"errCode,omitempty"`
	ErrMsg               *string               `protobuf:"bytes,3,req,name=errMsg" json:"errMsg,omitempty"`
	Event                *EventProto           `protobuf:"bytes,4,opt,name=event" json:"event,omitempty"`
	NotAllocated         *bool                 `protobuf:"varint,5,opt,name=notAllocated" json:"notAllocated,omitempty"`
	DefFlowCheckId       *int64                `protobuf:"varint,6,opt,name=defFlowCheckId" json:"defFlowCheckId,omitempty"`
	DefFlowControlInfo   *string               `protobuf:"bytes,7,opt,name=defFlowControlInfo" json:"defFlowControlInfo,omitempty"`
	GroupFlowCheckId     *int64                `protobuf:"varint,8,opt,name=groupFlowCheckId" json:"groupFlowCheckId,omitempty"`
	GroupFlowControlInfo *string               `protobuf:"bytes,9,opt,name=groupFlowControlInfo" json:"groupFlowControlInfo,omitempty"`
	SsdStoreId           *int64                `protobuf:"varint,10,opt,name=ssdStoreId" json:"ssdStoreId,omitempty"`
	QryPriorityId        *int32                `protobuf:"varint,11,opt,name=qryPriorityId" json:"qryPriorityId,omitempty"`
	RequireAuth          *bool                 `protobuf:"varint,12,opt,name=requireAuth" json:"requireAuth,omitempty"`
	AuthorizedInfo       *MasterAuthorizedInfo `protobuf:"bytes,13,opt,name=authorizedInfo" json:"authorizedInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *HeartResponseM2C) Reset()         { *m = HeartResponseM2C{} }
func (m *HeartResponseM2C) String() string { return proto.CompactTextString(m) }
func (*HeartResponseM2C) ProtoMessage()    {}
func (*HeartResponseM2C) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{15}
}

func (m *HeartResponseM2C) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartResponseM2C.Unmarshal(m, b)
}
func (m *HeartResponseM2C) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartResponseM2C.Marshal(b, m, deterministic)
}
func (m *HeartResponseM2C) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartResponseM2C.Merge(m, src)
}
func (m *HeartResponseM2C) XXX_Size() int {
	return xxx_messageInfo_HeartResponseM2C.Size(m)
}
func (m *HeartResponseM2C) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartResponseM2C.DiscardUnknown(m)
}

var xxx_messageInfo_HeartResponseM2C proto.InternalMessageInfo

func (m *HeartResponseM2C) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *HeartResponseM2C) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *HeartResponseM2C) GetErrMsg() string {
	if m != nil && m.ErrMsg != nil {
		return *m.ErrMsg
	}
	return ""
}

func (m *HeartResponseM2C) GetEvent() *EventProto {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *HeartResponseM2C) GetNotAllocated() bool {
	if m != nil && m.NotAllocated != nil {
		return *m.NotAllocated
	}
	return false
}

func (m *HeartResponseM2C) GetDefFlowCheckId() int64 {
	if m != nil && m.DefFlowCheckId != nil {
		return *m.DefFlowCheckId
	}
	return 0
}

func (m *HeartResponseM2C) GetDefFlowControlInfo() string {
	if m != nil && m.DefFlowControlInfo != nil {
		return *m.DefFlowControlInfo
	}
	return ""
}

func (m *HeartResponseM2C) GetGroupFlowCheckId() int64 {
	if m != nil && m.GroupFlowCheckId != nil {
		return *m.GroupFlowCheckId
	}
	return 0
}

func (m *HeartResponseM2C) GetGroupFlowControlInfo() string {
	if m != nil && m.GroupFlowControlInfo != nil {
		return *m.GroupFlowControlInfo
	}
	return ""
}

func (m *HeartResponseM2C) GetSsdStoreId() int64 {
	if m != nil && m.SsdStoreId != nil {
		return *m.SsdStoreId
	}
	return 0
}

func (m *HeartResponseM2C) GetQryPriorityId() int32 {
	if m != nil && m.QryPriorityId != nil {
		return *m.QryPriorityId
	}
	return 0
}

func (m *HeartResponseM2C) GetRequireAuth() bool {
	if m != nil && m.RequireAuth != nil {
		return *m.RequireAuth
	}
	return false
}

func (m *HeartResponseM2C) GetAuthorizedInfo() *MasterAuthorizedInfo {
	if m != nil {
		return m.AuthorizedInfo
	}
	return nil
}

type CloseRequestC2M struct {
	ClientId             *string                `protobuf:"bytes,1,req,name=clientId" json:"clientId,omitempty"`
	GroupName            *string                `protobuf:"bytes,2,req,name=groupName" json:"groupName,omitempty"`
	AuthInfo             *MasterCertificateInfo `protobuf:"bytes,3,opt,name=authInfo" json:"authInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CloseRequestC2M) Reset()         { *m = CloseRequestC2M{} }
func (m *CloseRequestC2M) String() string { return proto.CompactTextString(m) }
func (*CloseRequestC2M) ProtoMessage()    {}
func (*CloseRequestC2M) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{16}
}

func (m *CloseRequestC2M) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRequestC2M.Unmarshal(m, b)
}
func (m *CloseRequestC2M) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRequestC2M.Marshal(b, m, deterministic)
}
func (m *CloseRequestC2M) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRequestC2M.Merge(m, src)
}
func (m *CloseRequestC2M) XXX_Size() int {
	return xxx_messageInfo_CloseRequestC2M.Size(m)
}
func (m *CloseRequestC2M) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRequestC2M.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRequestC2M proto.InternalMessageInfo

func (m *CloseRequestC2M) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *CloseRequestC2M) GetGroupName() string {
	if m != nil && m.GroupName != nil {
		return *m.GroupName
	}
	return ""
}

func (m *CloseRequestC2M) GetAuthInfo() *MasterCertificateInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

type CloseResponseM2C struct {
	Success              *bool    `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	ErrCode              *int32   `protobuf:"varint,2,req,name=errCode" json:"errCode,omitempty"`
	ErrMsg               *string  `protobuf:"bytes,3,req,name=errMsg" json:"errMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseResponseM2C) Reset()         { *m = CloseResponseM2C{} }
func (m *CloseResponseM2C) String() string { return proto.CompactTextString(m) }
func (*CloseResponseM2C) ProtoMessage()    {}
func (*CloseResponseM2C) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{17}
}

func (m *CloseResponseM2C) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseResponseM2C.Unmarshal(m, b)
}
func (m *CloseResponseM2C) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseResponseM2C.Marshal(b, m, deterministic)
}
func (m *CloseResponseM2C) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseResponseM2C.Merge(m, src)
}
func (m *CloseResponseM2C) XXX_Size() int {
	return xxx_messageInfo_CloseResponseM2C.Size(m)
}
func (m *CloseResponseM2C) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseResponseM2C.DiscardUnknown(m)
}

var xxx_messageInfo_CloseResponseM2C proto.InternalMessageInfo

func (m *CloseResponseM2C) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *CloseResponseM2C) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *CloseResponseM2C) GetErrMsg() string {
	if m != nil && m.ErrMsg != nil {
		return *m.ErrMsg
	}
	return ""
}

type RegisterRequestB2M struct {
	ClientId        *string `protobuf:"bytes,1,req,name=clientId" json:"clientId,omitempty"`
	BrokerOnline    *bool   `protobuf:"varint,2,req,name=brokerOnline" json:"brokerOnline,omitempty"`
	EnableTls       *bool   `protobuf:"varint,3,req,name=enableTls" json:"enableTls,omitempty"`
	ReadStatusRpt   *int32  `protobuf:"varint,4,req,name=readStatusRpt" json:"readStatusRpt,omitempty"`
	WriteStatusRpt  *int32  `protobuf:"varint,5,req,name=writeStatusRpt" json:"writeStatusRpt,omitempty"`
	CurBrokerConfId *int64  `protobuf:"varint,6,req,name=curBrokerConfId" json:"curBrokerConfId,omitempty"`
	ConfCheckSumId  *int32  `protobuf:"varint,7,req,name=confCheckSumId" json:"confCheckSumId,omitempty"`
	// defaultPartNum:acceptPublish:acceptSubscribe:unflushThreshold:unflushInterval:deleteWhen:deletePolicy
	BrokerDefaultConfInfo *string `protobuf:"bytes,8,req,name=brokerDefaultConfInfo" json:"brokerDefaultConfInfo,omitempty"`
	// topic:partNum:acceptPublish:acceptSubscribe:unflushThreshold:unflushInterval:deleteWhen:deletePolicy:filterStatusId:statusId:attributes
	BrokerTopicSetConfInfo []string               `protobuf:"bytes,9,rep,name=brokerTopicSetConfInfo" json:"brokerTopicSetConfInfo,omitempty"`
	SsdStoreId             *int64                 `protobuf:"varint,10,opt,name=ssdStoreId" json:"ssdStoreId,omitempty"`
	FlowCheckId            *int64                 `protobuf:"varint,11,opt,name=flowCheckId" json:"flowCheckId,omitempty"`
	QryPriorityId          *int32                 `protobuf:"varint,12,opt,name=qryPriorityId" json:"qryPriorityId,omitempty"`
	TlsPort                *int32                 `protobuf:"varint,13,opt,name=tlsPort" json:"tlsPort,omitempty"`
	AuthInfo               *MasterCertificateInfo `protobuf:"bytes,14,opt,name=authInfo" json:"authInfo,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}               `json:"-"`
	XXX_unrecognized       []byte                 `json:"-"`
	XXX_sizecache          int32                  `json:"-"`
}

func (m *RegisterRequestB2M) Reset()         { *m = RegisterRequestB2M{} }
func (m *RegisterRequestB2M) String() string { return proto.CompactTextString(m) }
func (*RegisterRequestB2M) ProtoMessage()    {}
func (*RegisterRequestB2M) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{18}
}

func (m *RegisterRequestB2M) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequestB2M.Unmarshal(m, b)
}
func (m *RegisterRequestB2M) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequestB2M.Marshal(b, m, deterministic)
}
func (m *RegisterRequestB2M) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequestB2M.Merge(m, src)
}
func (m *RegisterRequestB2M) XXX_Size() int {
	return xxx_messageInfo_RegisterRequestB2M.Size(m)
}
func (m *RegisterRequestB2M) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequestB2M.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequestB2M proto.InternalMessageInfo

func (m *RegisterRequestB2M) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *RegisterRequestB2M) GetBrokerOnline() bool {
	if m != nil && m.BrokerOnline != nil {
		return *m.BrokerOnline
	}
	return false
}

func (m *RegisterRequestB2M) GetEnableTls() bool {
	if m != nil && m.EnableTls != nil {
		return *m.EnableTls
	}
	return false
}

func (m *RegisterRequestB2M) GetReadStatusRpt() int32 {
	if m != nil && m.ReadStatusRpt != nil {
		return *m.ReadStatusRpt
	}
	return 0
}

func (m *RegisterRequestB2M) GetWriteStatusRpt() int32 {
	if m != nil && m.WriteStatusRpt != nil {
		return *m.WriteStatusRpt
	}
	return 0
}

func (m *RegisterRequestB2M) GetCurBrokerConfId() int64 {
	if m != nil && m.CurBrokerConfId != nil {
		return *m.CurBrokerConfId
	}
	return 0
}

func (m *RegisterRequestB2M) GetConfCheckSumId() int32 {
	if m != nil && m.ConfCheckSumId != nil {
		return *m.ConfCheckSumId
	}
	return 0
}

func (m *RegisterRequestB2M) GetBrokerDefaultConfInfo() string {
	if m != nil && m.BrokerDefaultConfInfo != nil {
		return *m.BrokerDefaultConfInfo
	}
	return ""
}

func (m *RegisterRequestB2M) GetBrokerTopicSetConfInfo() []string {
	if m != nil {
		return m.BrokerTopicSetConfInfo
	}
	return nil
}

func (m *RegisterRequestB2M) GetSsdStoreId() int64 {
	if m != nil && m.SsdStoreId != nil {
		return *m.SsdStoreId
	}
	return 0
}

func (m *RegisterRequestB2M) GetFlowCheckId() int64 {
	if m != nil && m.FlowCheckId != nil {
		return *m.FlowCheckId
	}
	return 0
}

func (m *RegisterRequestB2M) GetQryPriorityId() int32 {
	if m != nil && m.QryPriorityId != nil {
		return *m.QryPriorityId
	}
	return 0
}

func (m *RegisterRequestB2M) GetTlsPort() int32 {
	if m != nil && m.TlsPort != nil {
		return *m.TlsPort
	}
	return 0
}

func (m *RegisterRequestB2M) GetAuthInfo() *MasterCertificateInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

type RegisterResponseM2B struct {
	Success          *bool                `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	ErrCode          *int32               `protobuf:"varint,2,req,name=errCode" json:"errCode,omitempty"`
	ErrMsg           *string              `protobuf:"bytes,3,req,name=errMsg" json:"errMsg,omitempty"`
	StopRead         *bool                `protobuf:"varint,4,req,name=stopRead" json:"stopRead,omitempty"`
	StopWrite        *bool                `protobuf:"varint,5,req,name=stopWrite" json:"stopWrite,omitempty"`
	TakeConfInfo     *bool                `protobuf:"varint,6,req,name=takeConfInfo" json:"takeConfInfo,omitempty"`
	EnableBrokerInfo *EnableBrokerFunInfo `protobuf:"bytes,7,opt,name=enableBrokerInfo" json:"enableBrokerInfo,omitempty"`
	CurBrokerConfId  *int64               `protobuf:"varint,8,opt,name=curBrokerConfId" json:"curBrokerConfId,omitempty"`
	ConfCheckSumId   *int32               `protobuf:"varint,9,opt,name=confCheckSumId" json:"confCheckSumId,omitempty"`
	// defaultPartNum:acceptPublish:acceptSubscribe:unflushThreshold:unflushInterval:deleteWhen:deletePolicy
	BrokerDefaultConfInfo *string `protobuf:"bytes,10,opt,name=brokerDefaultConfInfo" json:"brokerDefaultConfInfo,omitempty"`
	// topic:partNum:acceptPublish:acceptSubscribe:unflushThreshold:unflushInterval:deleteWhen:deletePolicy:filterStatusId:statusId:attributes
	BrokerTopicSetConfInfo []string                    `protobuf:"bytes,11,rep,name=brokerTopicSetConfInfo" json:"brokerTopicSetConfInfo,omitempty"`
	SsdStoreId             *int64                      `protobuf:"varint,12,opt,name=ssdStoreId" json:"ssdStoreId,omitempty"`
	FlowCheckId            *int64                      `protobuf:"varint,13,opt,name=flowCheckId" json:"flowCheckId,omitempty"`
	FlowControlInfo        *string                     `protobuf:"bytes,14,opt,name=flowControlInfo" json:"flowControlInfo,omitempty"`
	QryPriorityId          *int32                      `protobuf:"varint,15,opt,name=qryPriorityId" json:"qryPriorityId,omitempty"`
	AuthorizedInfo         *MasterAuthorizedInfo       `protobuf:"bytes,16,opt,name=authorizedInfo" json:"authorizedInfo,omitempty"`
	BrokerAuthorizedInfo   *MasterBrokerAuthorizedInfo `protobuf:"bytes,17,opt,name=brokerAuthorizedInfo" json:"brokerAuthorizedInfo,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                    `json:"-"`
	XXX_unrecognized       []byte                      `json:"-"`
	XXX_sizecache          int32                       `json:"-"`
}

func (m *RegisterResponseM2B) Reset()         { *m = RegisterResponseM2B{} }
func (m *RegisterResponseM2B) String() string { return proto.CompactTextString(m) }
func (*RegisterResponseM2B) ProtoMessage()    {}
func (*RegisterResponseM2B) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{19}
}

func (m *RegisterResponseM2B) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponseM2B.Unmarshal(m, b)
}
func (m *RegisterResponseM2B) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponseM2B.Marshal(b, m, deterministic)
}
func (m *RegisterResponseM2B) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponseM2B.Merge(m, src)
}
func (m *RegisterResponseM2B) XXX_Size() int {
	return xxx_messageInfo_RegisterResponseM2B.Size(m)
}
func (m *RegisterResponseM2B) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponseM2B.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponseM2B proto.InternalMessageInfo

func (m *RegisterResponseM2B) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *RegisterResponseM2B) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *RegisterResponseM2B) GetErrMsg() string {
	if m != nil && m.ErrMsg != nil {
		return *m.ErrMsg
	}
	return ""
}

func (m *RegisterResponseM2B) GetStopRead() bool {
	if m != nil && m.StopRead != nil {
		return *m.StopRead
	}
	return false
}

func (m *RegisterResponseM2B) GetStopWrite() bool {
	if m != nil && m.StopWrite != nil {
		return *m.StopWrite
	}
	return false
}

func (m *RegisterResponseM2B) GetTakeConfInfo() bool {
	if m != nil && m.TakeConfInfo != nil {
		return *m.TakeConfInfo
	}
	return false
}

func (m *RegisterResponseM2B) GetEnableBrokerInfo() *EnableBrokerFunInfo {
	if m != nil {
		return m.EnableBrokerInfo
	}
	return nil
}

func (m *RegisterResponseM2B) GetCurBrokerConfId() int64 {
	if m != nil && m.CurBrokerConfId != nil {
		return *m.CurBrokerConfId
	}
	return 0
}

func (m *RegisterResponseM2B) GetConfCheckSumId() int32 {
	if m != nil && m.ConfCheckSumId != nil {
		return *m.ConfCheckSumId
	}
	return 0
}

func (m *RegisterResponseM2B) GetBrokerDefaultConfInfo() string {
	if m != nil && m.BrokerDefaultConfInfo != nil {
		return *m.BrokerDefaultConfInfo
	}
	return ""
}

func (m *RegisterResponseM2B) GetBrokerTopicSetConfInfo() []string {
	if m != nil {
		return m.BrokerTopicSetConfInfo
	}
	return nil
}

func (m *RegisterResponseM2B) GetSsdStoreId() int64 {
	if m != nil && m.SsdStoreId != nil {
		return *m.SsdStoreId
	}
	return 0
}

func (m *RegisterResponseM2B) GetFlowCheckId() int64 {
	if m != nil && m.FlowCheckId != nil {
		return *m.FlowCheckId
	}
	return 0
}

func (m *RegisterResponseM2B) GetFlowControlInfo() string {
	if m != nil && m.FlowControlInfo != nil {
		return *m.FlowControlInfo
	}
	return ""
}

func (m *RegisterResponseM2B) GetQryPriorityId() int32 {
	if m != nil && m.QryPriorityId != nil {
		return *m.QryPriorityId
	}
	return 0
}

func (m *RegisterResponseM2B) GetAuthorizedInfo() *MasterAuthorizedInfo {
	if m != nil {
		return m.AuthorizedInfo
	}
	return nil
}

func (m *RegisterResponseM2B) GetBrokerAuthorizedInfo() *MasterBrokerAuthorizedInfo {
	if m != nil {
		return m.BrokerAuthorizedInfo
	}
	return nil
}

type HeartRequestB2M struct {
	BrokerId             *string `protobuf:"bytes,1,req,name=brokerId" json:"brokerId,omitempty"`
	BrokerOnline         *bool   `protobuf:"varint,2,req,name=brokerOnline" json:"brokerOnline,omitempty"`
	ReadStatusRpt        *int32  `protobuf:"varint,3,req,name=readStatusRpt" json:"readStatusRpt,omitempty"`
	WriteStatusRpt       *int32  `protobuf:"varint,4,req,name=writeStatusRpt" json:"writeStatusRpt,omitempty"`
	CurBrokerConfId      *int64  `protobuf:"varint,5,req,name=curBrokerConfId" json:"curBrokerConfId,omitempty"`
	ConfCheckSumId       *int32  `protobuf:"varint,6,req,name=confCheckSumId" json:"confCheckSumId,omitempty"`
	TakeConfInfo         *bool   `protobuf:"varint,7,req,name=takeConfInfo" json:"takeConfInfo,omitempty"`
	TakeRemovedTopicInfo *bool   `protobuf:"varint,8,req,name=takeRemovedTopicInfo" json:"takeRemovedTopicInfo,omitempty"`
	// defaultPartNum:acceptPublish:acceptSubscribe:unflushThreshold:unflushInterval:deleteWhen:deletePolicy
	BrokerDefaultConfInfo *string `protobuf:"bytes,9,opt,name=brokerDefaultConfInfo" json:"brokerDefaultConfInfo,omitempty"`
	// topic:partNum:acceptPublish:acceptSubscribe:unflushThreshold:unflushInterval:deleteWhen:deletePolicy:filterStatusId:statusId:attributes
	BrokerTopicSetConfInfo []string               `protobuf:"bytes,10,rep,name=brokerTopicSetConfInfo" json:"brokerTopicSetConfInfo,omitempty"`
	RemovedTopicsInfo      []string               `protobuf:"bytes,11,rep,name=removedTopicsInfo" json:"removedTopicsInfo,omitempty"`
	SsdStoreId             *int64                 `protobuf:"varint,12,opt,name=ssdStoreId" json:"ssdStoreId,omitempty"`
	FlowCheckId            *int64                 `protobuf:"varint,13,opt,name=flowCheckId" json:"flowCheckId,omitempty"`
	QryPriorityId          *int32                 `protobuf:"varint,14,opt,name=qryPriorityId" json:"qryPriorityId,omitempty"`
	AuthInfo               *MasterCertificateInfo `protobuf:"bytes,15,opt,name=authInfo" json:"authInfo,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}               `json:"-"`
	XXX_unrecognized       []byte                 `json:"-"`
	XXX_sizecache          int32                  `json:"-"`
}

func (m *HeartRequestB2M) Reset()         { *m = HeartRequestB2M{} }
func (m *HeartRequestB2M) String() string { return proto.CompactTextString(m) }
func (*HeartRequestB2M) ProtoMessage()    {}
func (*HeartRequestB2M) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{20}
}

func (m *HeartRequestB2M) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartRequestB2M.Unmarshal(m, b)
}
func (m *HeartRequestB2M) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartRequestB2M.Marshal(b, m, deterministic)
}
func (m *HeartRequestB2M) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartRequestB2M.Merge(m, src)
}
func (m *HeartRequestB2M) XXX_Size() int {
	return xxx_messageInfo_HeartRequestB2M.Size(m)
}
func (m *HeartRequestB2M) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartRequestB2M.DiscardUnknown(m)
}

var xxx_messageInfo_HeartRequestB2M proto.InternalMessageInfo

func (m *HeartRequestB2M) GetBrokerId() string {
	if m != nil && m.BrokerId != nil {
		return *m.BrokerId
	}
	return ""
}

func (m *HeartRequestB2M) GetBrokerOnline() bool {
	if m != nil && m.BrokerOnline != nil {
		return *m.BrokerOnline
	}
	return false
}

func (m *HeartRequestB2M) GetReadStatusRpt() int32 {
	if m != nil && m.ReadStatusRpt != nil {
		return *m.ReadStatusRpt
	}
	return 0
}

func (m *HeartRequestB2M) GetWriteStatusRpt() int32 {
	if m != nil && m.WriteStatusRpt != nil {
		return *m.WriteStatusRpt
	}
	return 0
}

func (m *HeartRequestB2M) GetCurBrokerConfId() int64 {
	if m != nil && m.CurBrokerConfId != nil {
		return *m.CurBrokerConfId
	}
	return 0
}

func (m *HeartRequestB2M) GetConfCheckSumId() int32 {
	if m != nil && m.ConfCheckSumId != nil {
		return *m.ConfCheckSumId
	}
	return 0
}

func (m *HeartRequestB2M) GetTakeConfInfo() bool {
	if m != nil && m.TakeConfInfo != nil {
		return *m.TakeConfInfo
	}
	return false
}

func (m *HeartRequestB2M) GetTakeRemovedTopicInfo() bool {
	if m != nil && m.TakeRemovedTopicInfo != nil {
		return *m.TakeRemovedTopicInfo
	}
	return false
}

func (m *HeartRequestB2M) GetBrokerDefaultConfInfo() string {
	if m != nil && m.BrokerDefaultConfInfo != nil {
		return *m.BrokerDefaultConfInfo
	}
	return ""
}

func (m *HeartRequestB2M) GetBrokerTopicSetConfInfo() []string {
	if m != nil {
		return m.BrokerTopicSetConfInfo
	}
	return nil
}

func (m *HeartRequestB2M) GetRemovedTopicsInfo() []string {
	if m != nil {
		return m.RemovedTopicsInfo
	}
	return nil
}

func (m *HeartRequestB2M) GetSsdStoreId() int64 {
	if m != nil && m.SsdStoreId != nil {
		return *m.SsdStoreId
	}
	return 0
}

func (m *HeartRequestB2M) GetFlowCheckId() int64 {
	if m != nil && m.FlowCheckId != nil {
		return *m.FlowCheckId
	}
	return 0
}

func (m *HeartRequestB2M) GetQryPriorityId() int32 {
	if m != nil && m.QryPriorityId != nil {
		return *m.QryPriorityId
	}
	return 0
}

func (m *HeartRequestB2M) GetAuthInfo() *MasterCertificateInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

type HeartResponseM2B struct {
	Success             *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	ErrCode             *int32  `protobuf:"varint,2,req,name=errCode" json:"errCode,omitempty"`
	ErrMsg              *string `protobuf:"bytes,3,req,name=errMsg" json:"errMsg,omitempty"`
	StopRead            *bool   `protobuf:"varint,4,req,name=stopRead" json:"stopRead,omitempty"`
	StopWrite           *bool   `protobuf:"varint,5,req,name=stopWrite" json:"stopWrite,omitempty"`
	CurBrokerConfId     *int64  `protobuf:"varint,6,req,name=curBrokerConfId" json:"curBrokerConfId,omitempty"`
	ConfCheckSumId      *int32  `protobuf:"varint,7,req,name=confCheckSumId" json:"confCheckSumId,omitempty"`
	NeedReportData      *bool   `protobuf:"varint,8,req,name=needReportData" json:"needReportData,omitempty"`
	TakeConfInfo        *bool   `protobuf:"varint,9,req,name=takeConfInfo" json:"takeConfInfo,omitempty"`
	TakeRemoveTopicInfo *bool   `protobuf:"varint,10,req,name=takeRemoveTopicInfo" json:"takeRemoveTopicInfo,omitempty"`
	// defaultPartNum:acceptPublish:acceptSubscribe:unflushThreshold:unflushInterval:deleteWhen:deletePolicy
	BrokerDefaultConfInfo *string `protobuf:"bytes,11,opt,name=brokerDefaultConfInfo" json:"brokerDefaultConfInfo,omitempty"`
	// topic:partNum:acceptPublish:acceptSubscribe:unflushThreshold:unflushInterval:deleteWhen:deletePolicy:filterStatusId:statusId:attributes
	BrokerTopicSetConfInfo []string `protobuf:"bytes,12,rep,name=brokerTopicSetConfInfo" json:"brokerTopicSetConfInfo,omitempty"`
	// topic:partNum:acceptPublish:acceptSubscribe:unflushThreshold:unflushInterval:deleteWhen:deletePolicy:filterStatusId:statusId:attributes
	RemoveTopicConfInfo  []string                    `protobuf:"bytes,13,rep,name=removeTopicConfInfo" json:"removeTopicConfInfo,omitempty"`
	SsdStoreId           *int64                      `protobuf:"varint,14,opt,name=ssdStoreId" json:"ssdStoreId,omitempty"`
	FlowCheckId          *int64                      `protobuf:"varint,15,opt,name=flowCheckId" json:"flowCheckId,omitempty"`
	FlowControlInfo      *string                     `protobuf:"bytes,16,opt,name=flowControlInfo" json:"flowControlInfo,omitempty"`
	QryPriorityId        *int32                      `protobuf:"varint,17,opt,name=qryPriorityId" json:"qryPriorityId,omitempty"`
	AuthorizedInfo       *MasterAuthorizedInfo       `protobuf:"bytes,18,opt,name=authorizedInfo" json:"authorizedInfo,omitempty"`
	BrokerAuthorizedInfo *MasterBrokerAuthorizedInfo `protobuf:"bytes,19,opt,name=brokerAuthorizedInfo" json:"brokerAuthorizedInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *HeartResponseM2B) Reset()         { *m = HeartResponseM2B{} }
func (m *HeartResponseM2B) String() string { return proto.CompactTextString(m) }
func (*HeartResponseM2B) ProtoMessage()    {}
func (*HeartResponseM2B) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{21}
}

func (m *HeartResponseM2B) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartResponseM2B.Unmarshal(m, b)
}
func (m *HeartResponseM2B) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartResponseM2B.Marshal(b, m, deterministic)
}
func (m *HeartResponseM2B) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartResponseM2B.Merge(m, src)
}
func (m *HeartResponseM2B) XXX_Size() int {
	return xxx_messageInfo_HeartResponseM2B.Size(m)
}
func (m *HeartResponseM2B) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartResponseM2B.DiscardUnknown(m)
}

var xxx_messageInfo_HeartResponseM2B proto.InternalMessageInfo

func (m *HeartResponseM2B) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *HeartResponseM2B) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *HeartResponseM2B) GetErrMsg() string {
	if m != nil && m.ErrMsg != nil {
		return *m.ErrMsg
	}
	return ""
}

func (m *HeartResponseM2B) GetStopRead() bool {
	if m != nil && m.StopRead != nil {
		return *m.StopRead
	}
	return false
}

func (m *HeartResponseM2B) GetStopWrite() bool {
	if m != nil && m.StopWrite != nil {
		return *m.StopWrite
	}
	return false
}

func (m *HeartResponseM2B) GetCurBrokerConfId() int64 {
	if m != nil && m.CurBrokerConfId != nil {
		return *m.CurBrokerConfId
	}
	return 0
}

func (m *HeartResponseM2B) GetConfCheckSumId() int32 {
	if m != nil && m.ConfCheckSumId != nil {
		return *m.ConfCheckSumId
	}
	return 0
}

func (m *HeartResponseM2B) GetNeedReportData() bool {
	if m != nil && m.NeedReportData != nil {
		return *m.NeedReportData
	}
	return false
}

func (m *HeartResponseM2B) GetTakeConfInfo() bool {
	if m != nil && m.TakeConfInfo != nil {
		return *m.TakeConfInfo
	}
	return false
}

func (m *HeartResponseM2B) GetTakeRemoveTopicInfo() bool {
	if m != nil && m.TakeRemoveTopicInfo != nil {
		return *m.TakeRemoveTopicInfo
	}
	return false
}

func (m *HeartResponseM2B) GetBrokerDefaultConfInfo() string {
	if m != nil && m.BrokerDefaultConfInfo != nil {
		return *m.BrokerDefaultConfInfo
	}
	return ""
}

func (m *HeartResponseM2B) GetBrokerTopicSetConfInfo() []string {
	if m != nil {
		return m.BrokerTopicSetConfInfo
	}
	return nil
}

func (m *HeartResponseM2B) GetRemoveTopicConfInfo() []string {
	if m != nil {
		return m.RemoveTopicConfInfo
	}
	return nil
}

func (m *HeartResponseM2B) GetSsdStoreId() int64 {
	if m != nil && m.SsdStoreId != nil {
		return *m.SsdStoreId
	}
	return 0
}

func (m *HeartResponseM2B) GetFlowCheckId() int64 {
	if m != nil && m.FlowCheckId != nil {
		return *m.FlowCheckId
	}
	return 0
}

func (m *HeartResponseM2B) GetFlowControlInfo() string {
	if m != nil && m.FlowControlInfo != nil {
		return *m.FlowControlInfo
	}
	return ""
}

func (m *HeartResponseM2B) GetQryPriorityId() int32 {
	if m != nil && m.QryPriorityId != nil {
		return *m.QryPriorityId
	}
	return 0
}

func (m *HeartResponseM2B) GetAuthorizedInfo() *MasterAuthorizedInfo {
	if m != nil {
		return m.AuthorizedInfo
	}
	return nil
}

func (m *HeartResponseM2B) GetBrokerAuthorizedInfo() *MasterBrokerAuthorizedInfo {
	if m != nil {
		return m.BrokerAuthorizedInfo
	}
	return nil
}

type CloseRequestB2M struct {
	BrokerId             *string                `protobuf:"bytes,1,req,name=brokerId" json:"brokerId,omitempty"`
	AuthInfo             *MasterCertificateInfo `protobuf:"bytes,2,opt,name=authInfo" json:"authInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CloseRequestB2M) Reset()         { *m = CloseRequestB2M{} }
func (m *CloseRequestB2M) String() string { return proto.CompactTextString(m) }
func (*CloseRequestB2M) ProtoMessage()    {}
func (*CloseRequestB2M) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{22}
}

func (m *CloseRequestB2M) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRequestB2M.Unmarshal(m, b)
}
func (m *CloseRequestB2M) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRequestB2M.Marshal(b, m, deterministic)
}
func (m *CloseRequestB2M) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRequestB2M.Merge(m, src)
}
func (m *CloseRequestB2M) XXX_Size() int {
	return xxx_messageInfo_CloseRequestB2M.Size(m)
}
func (m *CloseRequestB2M) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRequestB2M.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRequestB2M proto.InternalMessageInfo

func (m *CloseRequestB2M) GetBrokerId() string {
	if m != nil && m.BrokerId != nil {
		return *m.BrokerId
	}
	return ""
}

func (m *CloseRequestB2M) GetAuthInfo() *MasterCertificateInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

type CloseResponseM2B struct {
	Success              *bool    `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	ErrCode              *int32   `protobuf:"varint,2,req,name=errCode" json:"errCode,omitempty"`
	ErrMsg               *string  `protobuf:"bytes,3,req,name=errMsg" json:"errMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseResponseM2B) Reset()         { *m = CloseResponseM2B{} }
func (m *CloseResponseM2B) String() string { return proto.CompactTextString(m) }
func (*CloseResponseM2B) ProtoMessage()    {}
func (*CloseResponseM2B) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{23}
}

func (m *CloseResponseM2B) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseResponseM2B.Unmarshal(m, b)
}
func (m *CloseResponseM2B) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseResponseM2B.Marshal(b, m, deterministic)
}
func (m *CloseResponseM2B) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseResponseM2B.Merge(m, src)
}
func (m *CloseResponseM2B) XXX_Size() int {
	return xxx_messageInfo_CloseResponseM2B.Size(m)
}
func (m *CloseResponseM2B) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseResponseM2B.DiscardUnknown(m)
}

var xxx_messageInfo_CloseResponseM2B proto.InternalMessageInfo

func (m *CloseResponseM2B) GetSuccess() bool {
	if m != nil && m.Success != nil {
		return *m.Success
	}
	return false
}

func (m *CloseResponseM2B) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *CloseResponseM2B) GetErrMsg() string {
	if m != nil && m.ErrMsg != nil {
		return *m.ErrMsg
	}
	return ""
}

type DataStorePath struct {
	RecordId             *int32   `protobuf:"varint,1,req,name=recordId" json:"recordId,omitempty"`
	IsActive             *bool    `protobuf:"varint,2,req,name=isActive" json:"isActive,omitempty"`
	IsDefPath            *bool    `protobuf:"varint,3,req,name=isDefPath" json:"isDefPath,omitempty"`
	DataPath             *string  `protobuf:"bytes,4,opt,name=dataPath" json:"dataPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataStorePath) Reset()         { *m = DataStorePath{} }
func (m *DataStorePath) String() string { return proto.CompactTextString(m) }
func (*DataStorePath) ProtoMessage()    {}
func (*DataStorePath) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{24}
}

func (m *DataStorePath) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataStorePath.Unmarshal(m, b)
}
func (m *DataStorePath) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataStorePath.Marshal(b, m, deterministic)
}
func (m *DataStorePath) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataStorePath.Merge(m, src)
}
func (m *DataStorePath) XXX_Size() int {
	return xxx_messageInfo_DataStorePath.Size(m)
}
func (m *DataStorePath) XXX_DiscardUnknown() {
	xxx_messageInfo_DataStorePath.DiscardUnknown(m)
}

var xxx_messageInfo_DataStorePath proto.InternalMessageInfo

func (m *DataStorePath) GetRecordId() int32 {
	if m != nil && m.RecordId != nil {
		return *m.RecordId
	}
	return 0
}

func (m *DataStorePath) GetIsActive() bool {
	if m != nil && m.IsActive != nil {
		return *m.IsActive
	}
	return false
}

func (m *DataStorePath) GetIsDefPath() bool {
	if m != nil && m.IsDefPath != nil {
		return *m.IsDefPath
	}
	return false
}

func (m *DataStorePath) GetDataPath() string {
	if m != nil && m.DataPath != nil {
		return *m.DataPath
	}
	return ""
}

type TopicRmvInfo struct {
	TopicName            *string  `protobuf:"bytes,1,req,name=topicName" json:"topicName,omitempty"`
	StatusId             *int32   `protobuf:"varint,2,req,name=statusId" json:"statusId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicRmvInfo) Reset()         { *m = TopicRmvInfo{} }
func (m *TopicRmvInfo) String() string { return proto.CompactTextString(m) }
func (*TopicRmvInfo) ProtoMessage()    {}
func (*TopicRmvInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{25}
}

func (m *TopicRmvInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopicRmvInfo.Unmarshal(m, b)
}
func (m *TopicRmvInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopicRmvInfo.Marshal(b, m, deterministic)
}
func (m *TopicRmvInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicRmvInfo.Merge(m, src)
}
func (m *TopicRmvInfo) XXX_Size() int {
	return xxx_messageInfo_TopicRmvInfo.Size(m)
}
func (m *TopicRmvInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicRmvInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TopicRmvInfo proto.InternalMessageInfo

func (m *TopicRmvInfo) GetTopicName() string {
	if m != nil && m.TopicName != nil {
		return *m.TopicName
	}
	return ""
}

func (m *TopicRmvInfo) GetStatusId() int32 {
	if m != nil && m.StatusId != nil {
		return *m.StatusId
	}
	return 0
}

type DefaultConfigInfo struct {
	NumTopicStores       *int32   `protobuf:"varint,1,req,name=numTopicStores" json:"numTopicStores,omitempty"`
	NumPartitions        *int32   `protobuf:"varint,2,req,name=numPartitions" json:"numPartitions,omitempty"`
	UnflushMsgCnt        *int32   `protobuf:"varint,3,req,name=unflushMsgCnt" json:"unflushMsgCnt,omitempty"`
	UnflushInterval      *int32   `protobuf:"varint,4,req,name=unflushInterval" json:"unflushInterval,omitempty"`
	UnflushDataSize      *int32   `protobuf:"varint,5,req,name=unflushDataSize" json:"unflushDataSize,omitempty"`
	MemCacheBlockSize    *int32   `protobuf:"varint,6,req,name=memCacheBlockSize" json:"memCacheBlockSize,omitempty"`
	NumMemCacheBlock     *int32   `protobuf:"varint,7,req,name=numMemCacheBlock" json:"numMemCacheBlock,omitempty"`
	BathDiskWriteUnit    *int32   `protobuf:"varint,8,req,name=bathDiskWriteUnit" json:"bathDiskWriteUnit,omitempty"`
	BathDiskReadUnit     *int32   `protobuf:"varint,9,req,name=bathDiskReadUnit" json:"bathDiskReadUnit,omitempty"`
	AcceptPublish        *bool    `protobuf:"varint,10,req,name=acceptPublish" json:"acceptPublish,omitempty"`
	AcceptSubscribe      *bool    `protobuf:"varint,11,req,name=acceptSubscribe" json:"acceptSubscribe,omitempty"`
	DeletePolicy         *string  `protobuf:"bytes,12,req,name=deletePolicy" json:"deletePolicy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DefaultConfigInfo) Reset()         { *m = DefaultConfigInfo{} }
func (m *DefaultConfigInfo) String() string { return proto.CompactTextString(m) }
func (*DefaultConfigInfo) ProtoMessage()    {}
func (*DefaultConfigInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{26}
}

func (m *DefaultConfigInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DefaultConfigInfo.Unmarshal(m, b)
}
func (m *DefaultConfigInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DefaultConfigInfo.Marshal(b, m, deterministic)
}
func (m *DefaultConfigInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefaultConfigInfo.Merge(m, src)
}
func (m *DefaultConfigInfo) XXX_Size() int {
	return xxx_messageInfo_DefaultConfigInfo.Size(m)
}
func (m *DefaultConfigInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DefaultConfigInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DefaultConfigInfo proto.InternalMessageInfo

func (m *DefaultConfigInfo) GetNumTopicStores() int32 {
	if m != nil && m.NumTopicStores != nil {
		return *m.NumTopicStores
	}
	return 0
}

func (m *DefaultConfigInfo) GetNumPartitions() int32 {
	if m != nil && m.NumPartitions != nil {
		return *m.NumPartitions
	}
	return 0
}

func (m *DefaultConfigInfo) GetUnflushMsgCnt() int32 {
	if m != nil && m.UnflushMsgCnt != nil {
		return *m.UnflushMsgCnt
	}
	return 0
}

func (m *DefaultConfigInfo) GetUnflushInterval() int32 {
	if m != nil && m.UnflushInterval != nil {
		return *m.UnflushInterval
	}
	return 0
}

func (m *DefaultConfigInfo) GetUnflushDataSize() int32 {
	if m != nil && m.UnflushDataSize != nil {
		return *m.UnflushDataSize
	}
	return 0
}

func (m *DefaultConfigInfo) GetMemCacheBlockSize() int32 {
	if m != nil && m.MemCacheBlockSize != nil {
		return *m.MemCacheBlockSize
	}
	return 0
}

func (m *DefaultConfigInfo) GetNumMemCacheBlock() int32 {
	if m != nil && m.NumMemCacheBlock != nil {
		return *m.NumMemCacheBlock
	}
	return 0
}

func (m *DefaultConfigInfo) GetBathDiskWriteUnit() int32 {
	if m != nil && m.BathDiskWriteUnit != nil {
		return *m.BathDiskWriteUnit
	}
	return 0
}

func (m *DefaultConfigInfo) GetBathDiskReadUnit() int32 {
	if m != nil && m.BathDiskReadUnit != nil {
		return *m.BathDiskReadUnit
	}
	return 0
}

func (m *DefaultConfigInfo) GetAcceptPublish() bool {
	if m != nil && m.AcceptPublish != nil {
		return *m.AcceptPublish
	}
	return false
}

func (m *DefaultConfigInfo) GetAcceptSubscribe() bool {
	if m != nil && m.AcceptSubscribe != nil {
		return *m.AcceptSubscribe
	}
	return false
}

func (m *DefaultConfigInfo) GetDeletePolicy() string {
	if m != nil && m.DeletePolicy != nil {
		return *m.DeletePolicy
	}
	return ""
}

type TopicConfigInfo struct {
	TopicName            *string          `protobuf:"bytes,1,req,name=topicName" json:"topicName,omitempty"`
	StatusId             *int32           `protobuf:"varint,2,opt,name=statusId" json:"statusId,omitempty"`
	NumTopicStores       *int32           `protobuf:"varint,3,opt,name=numTopicStores" json:"numTopicStores,omitempty"`
	NumPartitions        *int32           `protobuf:"varint,4,opt,name=numPartitions" json:"numPartitions,omitempty"`
	UnflushMsgCnt        *int32           `protobuf:"varint,5,opt,name=unflushMsgCnt" json:"unflushMsgCnt,omitempty"`
	UnflushInterval      *int32           `protobuf:"varint,6,opt,name=unflushInterval" json:"unflushInterval,omitempty"`
	UnflushDataSize      *int32           `protobuf:"varint,7,opt,name=unflushDataSize" json:"unflushDataSize,omitempty"`
	MemCacheBlockSize    *int32           `protobuf:"varint,8,opt,name=memCacheBlockSize" json:"memCacheBlockSize,omitempty"`
	NumMemCacheBlock     *int32           `protobuf:"varint,9,opt,name=numMemCacheBlock" json:"numMemCacheBlock,omitempty"`
	AcceptPublish        *bool            `protobuf:"varint,10,opt,name=acceptPublish" json:"acceptPublish,omitempty"`
	AcceptSubscribe      *bool            `protobuf:"varint,11,opt,name=acceptSubscribe" json:"acceptSubscribe,omitempty"`
	DeletePolicy         *string          `protobuf:"bytes,12,opt,name=deletePolicy" json:"deletePolicy,omitempty"`
	DataPath             []*DataStorePath `protobuf:"bytes,13,rep,name=dataPath" json:"dataPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TopicConfigInfo) Reset()         { *m = TopicConfigInfo{} }
func (m *TopicConfigInfo) String() string { return proto.CompactTextString(m) }
func (*TopicConfigInfo) ProtoMessage()    {}
func (*TopicConfigInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{27}
}

func (m *TopicConfigInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TopicConfigInfo.Unmarshal(m, b)
}
func (m *TopicConfigInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TopicConfigInfo.Marshal(b, m, deterministic)
}
func (m *TopicConfigInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicConfigInfo.Merge(m, src)
}
func (m *TopicConfigInfo) XXX_Size() int {
	return xxx_messageInfo_TopicConfigInfo.Size(m)
}
func (m *TopicConfigInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicConfigInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TopicConfigInfo proto.InternalMessageInfo

func (m *TopicConfigInfo) GetTopicName() string {
	if m != nil && m.TopicName != nil {
		return *m.TopicName
	}
	return ""
}

func (m *TopicConfigInfo) GetStatusId() int32 {
	if m != nil && m.StatusId != nil {
		return *m.StatusId
	}
	return 0
}

func (m *TopicConfigInfo) GetNumTopicStores() int32 {
	if m != nil && m.NumTopicStores != nil {
		return *m.NumTopicStores
	}
	return 0
}

func (m *TopicConfigInfo) GetNumPartitions() int32 {
	if m != nil && m.NumPartitions != nil {
		return *m.NumPartitions
	}
	return 0
}

func (m *TopicConfigInfo) GetUnflushMsgCnt() int32 {
	if m != nil && m.UnflushMsgCnt != nil {
		return *m.UnflushMsgCnt
	}
	return 0
}

func (m *TopicConfigInfo) GetUnflushInterval() int32 {
	if m != nil && m.UnflushInterval != nil {
		return *m.UnflushInterval
	}
	return 0
}

func (m *TopicConfigInfo) GetUnflushDataSize() int32 {
	if m != nil && m.UnflushDataSize != nil {
		return *m.UnflushDataSize
	}
	return 0
}

func (m *TopicConfigInfo) GetMemCacheBlockSize() int32 {
	if m != nil && m.MemCacheBlockSize != nil {
		return *m.MemCacheBlockSize
	}
	return 0
}

func (m *TopicConfigInfo) GetNumMemCacheBlock() int32 {
	if m != nil && m.NumMemCacheBlock != nil {
		return *m.NumMemCacheBlock
	}
	return 0
}

func (m *TopicConfigInfo) GetAcceptPublish() bool {
	if m != nil && m.AcceptPublish != nil {
		return *m.AcceptPublish
	}
	return false
}

func (m *TopicConfigInfo) GetAcceptSubscribe() bool {
	if m != nil && m.AcceptSubscribe != nil {
		return *m.AcceptSubscribe
	}
	return false
}

func (m *TopicConfigInfo) GetDeletePolicy() string {
	if m != nil && m.DeletePolicy != nil {
		return *m.DeletePolicy
	}
	return ""
}

func (m *TopicConfigInfo) GetDataPath() []*DataStorePath {
	if m != nil {
		return m.DataPath
	}
	return nil
}

type BrokerConfigInfo struct {
	BrokerConfId         *int64             `protobuf:"varint,1,req,name=brokerConfId" json:"brokerConfId,omitempty"`
	ConfCheckSumId       *int32             `protobuf:"varint,2,req,name=confCheckSumId" json:"confCheckSumId,omitempty"`
	DefConfigInfo        *DefaultConfigInfo `protobuf:"bytes,3,opt,name=defConfigInfo" json:"defConfigInfo,omitempty"`
	TopicConfigInfos     []*TopicConfigInfo `protobuf:"bytes,4,rep,name=topicConfigInfos" json:"topicConfigInfos,omitempty"`
	EnableTls            *bool              `protobuf:"varint,5,opt,name=enableTls" json:"enableTls,omitempty"`
	TlsPort              *int32             `protobuf:"varint,6,opt,name=tlsPort" json:"tlsPort,omitempty"`
	WebPort              *int32             `protobuf:"varint,7,opt,name=webPort" json:"webPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BrokerConfigInfo) Reset()         { *m = BrokerConfigInfo{} }
func (m *BrokerConfigInfo) String() string { return proto.CompactTextString(m) }
func (*BrokerConfigInfo) ProtoMessage()    {}
func (*BrokerConfigInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{28}
}

func (m *BrokerConfigInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrokerConfigInfo.Unmarshal(m, b)
}
func (m *BrokerConfigInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrokerConfigInfo.Marshal(b, m, deterministic)
}
func (m *BrokerConfigInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrokerConfigInfo.Merge(m, src)
}
func (m *BrokerConfigInfo) XXX_Size() int {
	return xxx_messageInfo_BrokerConfigInfo.Size(m)
}
func (m *BrokerConfigInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BrokerConfigInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BrokerConfigInfo proto.InternalMessageInfo

func (m *BrokerConfigInfo) GetBrokerConfId() int64 {
	if m != nil && m.BrokerConfId != nil {
		return *m.BrokerConfId
	}
	return 0
}

func (m *BrokerConfigInfo) GetConfCheckSumId() int32 {
	if m != nil && m.ConfCheckSumId != nil {
		return *m.ConfCheckSumId
	}
	return 0
}

func (m *BrokerConfigInfo) GetDefConfigInfo() *DefaultConfigInfo {
	if m != nil {
		return m.DefConfigInfo
	}
	return nil
}

func (m *BrokerConfigInfo) GetTopicConfigInfos() []*TopicConfigInfo {
	if m != nil {
		return m.TopicConfigInfos
	}
	return nil
}

func (m *BrokerConfigInfo) GetEnableTls() bool {
	if m != nil && m.EnableTls != nil {
		return *m.EnableTls
	}
	return false
}

func (m *BrokerConfigInfo) GetTlsPort() int32 {
	if m != nil && m.TlsPort != nil {
		return *m.TlsPort
	}
	return 0
}

func (m *BrokerConfigInfo) GetWebPort() int32 {
	if m != nil && m.WebPort != nil {
		return *m.WebPort
	}
	return 0
}

type BrokerPolicyInfo struct {
	PolicyId             *int64   `protobuf:"varint,1,opt,name=policyId" json:"policyId,omitempty"`
	QryPriorityId        *int32   `protobuf:"varint,2,opt,name=qryPriorityId" json:"qryPriorityId,omitempty"`
	PolicyInfo           *string  `protobuf:"bytes,3,opt,name=policyInfo" json:"policyInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrokerPolicyInfo) Reset()         { *m = BrokerPolicyInfo{} }
func (m *BrokerPolicyInfo) String() string { return proto.CompactTextString(m) }
func (*BrokerPolicyInfo) ProtoMessage()    {}
func (*BrokerPolicyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{29}
}

func (m *BrokerPolicyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrokerPolicyInfo.Unmarshal(m, b)
}
func (m *BrokerPolicyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrokerPolicyInfo.Marshal(b, m, deterministic)
}
func (m *BrokerPolicyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrokerPolicyInfo.Merge(m, src)
}
func (m *BrokerPolicyInfo) XXX_Size() int {
	return xxx_messageInfo_BrokerPolicyInfo.Size(m)
}
func (m *BrokerPolicyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BrokerPolicyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BrokerPolicyInfo proto.InternalMessageInfo

func (m *BrokerPolicyInfo) GetPolicyId() int64 {
	if m != nil && m.PolicyId != nil {
		return *m.PolicyId
	}
	return 0
}

func (m *BrokerPolicyInfo) GetQryPriorityId() int32 {
	if m != nil && m.QryPriorityId != nil {
		return *m.QryPriorityId
	}
	return 0
}

func (m *BrokerPolicyInfo) GetPolicyInfo() string {
	if m != nil && m.PolicyInfo != nil {
		return *m.PolicyInfo
	}
	return ""
}

type BrokerStatusInfo struct {
	IsOnline             *bool    `protobuf:"varint,1,req,name=isOnline" json:"isOnline,omitempty"`
	ReadStatusRpt        *int32   `protobuf:"varint,2,req,name=readStatusRpt" json:"readStatusRpt,omitempty"`
	WriteStatusRpt       *int32   `protobuf:"varint,3,req,name=writeStatusRpt" json:"writeStatusRpt,omitempty"`
	LastOperateId        *int32   `protobuf:"varint,4,opt,name=lastOperateId" json:"lastOperateId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrokerStatusInfo) Reset()         { *m = BrokerStatusInfo{} }
func (m *BrokerStatusInfo) String() string { return proto.CompactTextString(m) }
func (*BrokerStatusInfo) ProtoMessage()    {}
func (*BrokerStatusInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{30}
}

func (m *BrokerStatusInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrokerStatusInfo.Unmarshal(m, b)
}
func (m *BrokerStatusInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrokerStatusInfo.Marshal(b, m, deterministic)
}
func (m *BrokerStatusInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrokerStatusInfo.Merge(m, src)
}
func (m *BrokerStatusInfo) XXX_Size() int {
	return xxx_messageInfo_BrokerStatusInfo.Size(m)
}
func (m *BrokerStatusInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BrokerStatusInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BrokerStatusInfo proto.InternalMessageInfo

func (m *BrokerStatusInfo) GetIsOnline() bool {
	if m != nil && m.IsOnline != nil {
		return *m.IsOnline
	}
	return false
}

func (m *BrokerStatusInfo) GetReadStatusRpt() int32 {
	if m != nil && m.ReadStatusRpt != nil {
		return *m.ReadStatusRpt
	}
	return 0
}

func (m *BrokerStatusInfo) GetWriteStatusRpt() int32 {
	if m != nil && m.WriteStatusRpt != nil {
		return *m.WriteStatusRpt
	}
	return 0
}

func (m *BrokerStatusInfo) GetLastOperateId() int32 {
	if m != nil && m.LastOperateId != nil {
		return *m.LastOperateId
	}
	return 0
}

type BrokerOperateInfo struct {
	OperateId *int32 `protobuf:"varint,1,req,name=operateId" json:"operateId,omitempty"`
	// 00:normal, 01:stop read, 10:stop write, 11:stop read and write
	FrcServiceStatus          *int32          `protobuf:"varint,2,req,name=frcServiceStatus" json:"frcServiceStatus,omitempty"`
	FrcRptConfig              *bool           `protobuf:"varint,3,opt,name=frcRptConfig" json:"frcRptConfig,omitempty"`
	EnableConsumeAuthenticate *bool           `protobuf:"varint,4,opt,name=enableConsumeAuthenticate" json:"enableConsumeAuthenticate,omitempty"`
	EnableConsumeAuthorize    *bool           `protobuf:"varint,5,opt,name=enableConsumeAuthorize" json:"enableConsumeAuthorize,omitempty"`
	EnableProduceAuthenticate *bool           `protobuf:"varint,6,opt,name=enableProduceAuthenticate" json:"enableProduceAuthenticate,omitempty"`
	EnableProduceAuthorize    *bool           `protobuf:"varint,7,opt,name=enableProduceAuthorize" json:"enableProduceAuthorize,omitempty"`
	EnableVisitTokenCheck     *bool           `protobuf:"varint,8,opt,name=enableVisitTokenCheck" json:"enableVisitTokenCheck,omitempty"`
	RmvTopicsInfo             []*TopicRmvInfo `protobuf:"bytes,9,rep,name=rmvTopicsInfo" json:"rmvTopicsInfo,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}        `json:"-"`
	XXX_unrecognized          []byte          `json:"-"`
	XXX_sizecache             int32           `json:"-"`
}

func (m *BrokerOperateInfo) Reset()         { *m = BrokerOperateInfo{} }
func (m *BrokerOperateInfo) String() string { return proto.CompactTextString(m) }
func (*BrokerOperateInfo) ProtoMessage()    {}
func (*BrokerOperateInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{31}
}

func (m *BrokerOperateInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrokerOperateInfo.Unmarshal(m, b)
}
func (m *BrokerOperateInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrokerOperateInfo.Marshal(b, m, deterministic)
}
func (m *BrokerOperateInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrokerOperateInfo.Merge(m, src)
}
func (m *BrokerOperateInfo) XXX_Size() int {
	return xxx_messageInfo_BrokerOperateInfo.Size(m)
}
func (m *BrokerOperateInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BrokerOperateInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BrokerOperateInfo proto.InternalMessageInfo

func (m *BrokerOperateInfo) GetOperateId() int32 {
	if m != nil && m.OperateId != nil {
		return *m.OperateId
	}
	return 0
}

func (m *BrokerOperateInfo) GetFrcServiceStatus() int32 {
	if m != nil && m.FrcServiceStatus != nil {
		return *m.FrcServiceStatus
	}
	return 0
}

func (m *BrokerOperateInfo) GetFrcRptConfig() bool {
	if m != nil && m.FrcRptConfig != nil {
		return *m.FrcRptConfig
	}
	return false
}

func (m *BrokerOperateInfo) GetEnableConsumeAuthenticate() bool {
	if m != nil && m.EnableConsumeAuthenticate != nil {
		return *m.EnableConsumeAuthenticate
	}
	return false
}

func (m *BrokerOperateInfo) GetEnableConsumeAuthorize() bool {
	if m != nil && m.EnableConsumeAuthorize != nil {
		return *m.EnableConsumeAuthorize
	}
	return false
}

func (m *BrokerOperateInfo) GetEnableProduceAuthenticate() bool {
	if m != nil && m.EnableProduceAuthenticate != nil {
		return *m.EnableProduceAuthenticate
	}
	return false
}

func (m *BrokerOperateInfo) GetEnableProduceAuthorize() bool {
	if m != nil && m.EnableProduceAuthorize != nil {
		return *m.EnableProduceAuthorize
	}
	return false
}

func (m *BrokerOperateInfo) GetEnableVisitTokenCheck() bool {
	if m != nil && m.EnableVisitTokenCheck != nil {
		return *m.EnableVisitTokenCheck
	}
	return false
}

func (m *BrokerOperateInfo) GetRmvTopicsInfo() []*TopicRmvInfo {
	if m != nil {
		return m.RmvTopicsInfo
	}
	return nil
}

type RegisterRequest_V2_B2M struct {
	ClientId             *string                `protobuf:"bytes,1,req,name=clientId" json:"clientId,omitempty"`
	StatusRptInfo        *BrokerStatusInfo      `protobuf:"bytes,2,req,name=statusRptInfo" json:"statusRptInfo,omitempty"`
	ConfigInfo           *BrokerConfigInfo      `protobuf:"bytes,3,req,name=configInfo" json:"configInfo,omitempty"`
	PolicyInfo           *BrokerPolicyInfo      `protobuf:"bytes,4,req,name=policyInfo" json:"policyInfo,omitempty"`
	AuthInfo             *MasterCertificateInfo `protobuf:"bytes,5,opt,name=authInfo" json:"authInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RegisterRequest_V2_B2M) Reset()         { *m = RegisterRequest_V2_B2M{} }
func (m *RegisterRequest_V2_B2M) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest_V2_B2M) ProtoMessage()    {}
func (*RegisterRequest_V2_B2M) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{32}
}

func (m *RegisterRequest_V2_B2M) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest_V2_B2M.Unmarshal(m, b)
}
func (m *RegisterRequest_V2_B2M) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest_V2_B2M.Marshal(b, m, deterministic)
}
func (m *RegisterRequest_V2_B2M) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest_V2_B2M.Merge(m, src)
}
func (m *RegisterRequest_V2_B2M) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest_V2_B2M.Size(m)
}
func (m *RegisterRequest_V2_B2M) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest_V2_B2M.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest_V2_B2M proto.InternalMessageInfo

func (m *RegisterRequest_V2_B2M) GetClientId() string {
	if m != nil && m.ClientId != nil {
		return *m.ClientId
	}
	return ""
}

func (m *RegisterRequest_V2_B2M) GetStatusRptInfo() *BrokerStatusInfo {
	if m != nil {
		return m.StatusRptInfo
	}
	return nil
}

func (m *RegisterRequest_V2_B2M) GetConfigInfo() *BrokerConfigInfo {
	if m != nil {
		return m.ConfigInfo
	}
	return nil
}

func (m *RegisterRequest_V2_B2M) GetPolicyInfo() *BrokerPolicyInfo {
	if m != nil {
		return m.PolicyInfo
	}
	return nil
}

func (m *RegisterRequest_V2_B2M) GetAuthInfo() *MasterCertificateInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

type RegisterResponse_V2_M2B struct {
	ErrCode              *int32                      `protobuf:"varint,1,req,name=errCode" json:"errCode,omitempty"`
	ErrMsg               *string                     `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	ConfigInfo           *BrokerConfigInfo           `protobuf:"bytes,3,opt,name=configInfo" json:"configInfo,omitempty"`
	OperateInfo          *BrokerOperateInfo          `protobuf:"bytes,4,opt,name=operateInfo" json:"operateInfo,omitempty"`
	PolicyInfo           *BrokerPolicyInfo           `protobuf:"bytes,5,opt,name=policyInfo" json:"policyInfo,omitempty"`
	AuthorizedInfo       *MasterBrokerAuthorizedInfo `protobuf:"bytes,6,opt,name=authorizedInfo" json:"authorizedInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *RegisterResponse_V2_M2B) Reset()         { *m = RegisterResponse_V2_M2B{} }
func (m *RegisterResponse_V2_M2B) String() string { return proto.CompactTextString(m) }
func (*RegisterResponse_V2_M2B) ProtoMessage()    {}
func (*RegisterResponse_V2_M2B) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{33}
}

func (m *RegisterResponse_V2_M2B) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponse_V2_M2B.Unmarshal(m, b)
}
func (m *RegisterResponse_V2_M2B) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponse_V2_M2B.Marshal(b, m, deterministic)
}
func (m *RegisterResponse_V2_M2B) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponse_V2_M2B.Merge(m, src)
}
func (m *RegisterResponse_V2_M2B) XXX_Size() int {
	return xxx_messageInfo_RegisterResponse_V2_M2B.Size(m)
}
func (m *RegisterResponse_V2_M2B) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponse_V2_M2B.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponse_V2_M2B proto.InternalMessageInfo

func (m *RegisterResponse_V2_M2B) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *RegisterResponse_V2_M2B) GetErrMsg() string {
	if m != nil && m.ErrMsg != nil {
		return *m.ErrMsg
	}
	return ""
}

func (m *RegisterResponse_V2_M2B) GetConfigInfo() *BrokerConfigInfo {
	if m != nil {
		return m.ConfigInfo
	}
	return nil
}

func (m *RegisterResponse_V2_M2B) GetOperateInfo() *BrokerOperateInfo {
	if m != nil {
		return m.OperateInfo
	}
	return nil
}

func (m *RegisterResponse_V2_M2B) GetPolicyInfo() *BrokerPolicyInfo {
	if m != nil {
		return m.PolicyInfo
	}
	return nil
}

func (m *RegisterResponse_V2_M2B) GetAuthorizedInfo() *MasterBrokerAuthorizedInfo {
	if m != nil {
		return m.AuthorizedInfo
	}
	return nil
}

type HeartRequest_V2_B2M struct {
	BrokerId             *string                `protobuf:"bytes,1,req,name=brokerId" json:"brokerId,omitempty"`
	StatusRptInfo        *BrokerStatusInfo      `protobuf:"bytes,2,req,name=statusRptInfo" json:"statusRptInfo,omitempty"`
	ConfigInfo           *BrokerConfigInfo      `protobuf:"bytes,3,req,name=configInfo" json:"configInfo,omitempty"`
	PolicyInfo           *BrokerPolicyInfo      `protobuf:"bytes,4,opt,name=policyInfo" json:"policyInfo,omitempty"`
	AuthInfo             *MasterCertificateInfo `protobuf:"bytes,5,opt,name=authInfo" json:"authInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *HeartRequest_V2_B2M) Reset()         { *m = HeartRequest_V2_B2M{} }
func (m *HeartRequest_V2_B2M) String() string { return proto.CompactTextString(m) }
func (*HeartRequest_V2_B2M) ProtoMessage()    {}
func (*HeartRequest_V2_B2M) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{34}
}

func (m *HeartRequest_V2_B2M) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartRequest_V2_B2M.Unmarshal(m, b)
}
func (m *HeartRequest_V2_B2M) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartRequest_V2_B2M.Marshal(b, m, deterministic)
}
func (m *HeartRequest_V2_B2M) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartRequest_V2_B2M.Merge(m, src)
}
func (m *HeartRequest_V2_B2M) XXX_Size() int {
	return xxx_messageInfo_HeartRequest_V2_B2M.Size(m)
}
func (m *HeartRequest_V2_B2M) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartRequest_V2_B2M.DiscardUnknown(m)
}

var xxx_messageInfo_HeartRequest_V2_B2M proto.InternalMessageInfo

func (m *HeartRequest_V2_B2M) GetBrokerId() string {
	if m != nil && m.BrokerId != nil {
		return *m.BrokerId
	}
	return ""
}

func (m *HeartRequest_V2_B2M) GetStatusRptInfo() *BrokerStatusInfo {
	if m != nil {
		return m.StatusRptInfo
	}
	return nil
}

func (m *HeartRequest_V2_B2M) GetConfigInfo() *BrokerConfigInfo {
	if m != nil {
		return m.ConfigInfo
	}
	return nil
}

func (m *HeartRequest_V2_B2M) GetPolicyInfo() *BrokerPolicyInfo {
	if m != nil {
		return m.PolicyInfo
	}
	return nil
}

func (m *HeartRequest_V2_B2M) GetAuthInfo() *MasterCertificateInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

type HeartResponse_V2_M2B struct {
	ErrCode              *int32                      `protobuf:"varint,1,req,name=errCode" json:"errCode,omitempty"`
	ErrMsg               *string                     `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	ConfigInfo           *BrokerConfigInfo           `protobuf:"bytes,3,opt,name=configInfo" json:"configInfo,omitempty"`
	OperateInfo          *BrokerOperateInfo          `protobuf:"bytes,4,opt,name=operateInfo" json:"operateInfo,omitempty"`
	PolicyInfo           *BrokerPolicyInfo           `protobuf:"bytes,5,opt,name=policyInfo" json:"policyInfo,omitempty"`
	BrokerAuthorizedInfo *MasterBrokerAuthorizedInfo `protobuf:"bytes,6,opt,name=brokerAuthorizedInfo" json:"brokerAuthorizedInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *HeartResponse_V2_M2B) Reset()         { *m = HeartResponse_V2_M2B{} }
func (m *HeartResponse_V2_M2B) String() string { return proto.CompactTextString(m) }
func (*HeartResponse_V2_M2B) ProtoMessage()    {}
func (*HeartResponse_V2_M2B) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{35}
}

func (m *HeartResponse_V2_M2B) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartResponse_V2_M2B.Unmarshal(m, b)
}
func (m *HeartResponse_V2_M2B) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartResponse_V2_M2B.Marshal(b, m, deterministic)
}
func (m *HeartResponse_V2_M2B) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartResponse_V2_M2B.Merge(m, src)
}
func (m *HeartResponse_V2_M2B) XXX_Size() int {
	return xxx_messageInfo_HeartResponse_V2_M2B.Size(m)
}
func (m *HeartResponse_V2_M2B) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartResponse_V2_M2B.DiscardUnknown(m)
}

var xxx_messageInfo_HeartResponse_V2_M2B proto.InternalMessageInfo

func (m *HeartResponse_V2_M2B) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *HeartResponse_V2_M2B) GetErrMsg() string {
	if m != nil && m.ErrMsg != nil {
		return *m.ErrMsg
	}
	return ""
}

func (m *HeartResponse_V2_M2B) GetConfigInfo() *BrokerConfigInfo {
	if m != nil {
		return m.ConfigInfo
	}
	return nil
}

func (m *HeartResponse_V2_M2B) GetOperateInfo() *BrokerOperateInfo {
	if m != nil {
		return m.OperateInfo
	}
	return nil
}

func (m *HeartResponse_V2_M2B) GetPolicyInfo() *BrokerPolicyInfo {
	if m != nil {
		return m.PolicyInfo
	}
	return nil
}

func (m *HeartResponse_V2_M2B) GetBrokerAuthorizedInfo() *MasterBrokerAuthorizedInfo {
	if m != nil {
		return m.BrokerAuthorizedInfo
	}
	return nil
}

type CloseRequest_V2_B2M struct {
	BrokerId             *string                `protobuf:"bytes,1,req,name=brokerId" json:"brokerId,omitempty"`
	AuthInfo             *MasterCertificateInfo `protobuf:"bytes,2,opt,name=authInfo" json:"authInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CloseRequest_V2_B2M) Reset()         { *m = CloseRequest_V2_B2M{} }
func (m *CloseRequest_V2_B2M) String() string { return proto.CompactTextString(m) }
func (*CloseRequest_V2_B2M) ProtoMessage()    {}
func (*CloseRequest_V2_B2M) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{36}
}

func (m *CloseRequest_V2_B2M) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRequest_V2_B2M.Unmarshal(m, b)
}
func (m *CloseRequest_V2_B2M) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRequest_V2_B2M.Marshal(b, m, deterministic)
}
func (m *CloseRequest_V2_B2M) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRequest_V2_B2M.Merge(m, src)
}
func (m *CloseRequest_V2_B2M) XXX_Size() int {
	return xxx_messageInfo_CloseRequest_V2_B2M.Size(m)
}
func (m *CloseRequest_V2_B2M) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRequest_V2_B2M.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRequest_V2_B2M proto.InternalMessageInfo

func (m *CloseRequest_V2_B2M) GetBrokerId() string {
	if m != nil && m.BrokerId != nil {
		return *m.BrokerId
	}
	return ""
}

func (m *CloseRequest_V2_B2M) GetAuthInfo() *MasterCertificateInfo {
	if m != nil {
		return m.AuthInfo
	}
	return nil
}

type CloseResponse_V2_M2B struct {
	ErrCode              *int32   `protobuf:"varint,1,req,name=errCode" json:"errCode,omitempty"`
	ErrMsg               *string  `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseResponse_V2_M2B) Reset()         { *m = CloseResponse_V2_M2B{} }
func (m *CloseResponse_V2_M2B) String() string { return proto.CompactTextString(m) }
func (*CloseResponse_V2_M2B) ProtoMessage()    {}
func (*CloseResponse_V2_M2B) Descriptor() ([]byte, []int) {
	return fileDescriptor_b409182280420a1f, []int{37}
}

func (m *CloseResponse_V2_M2B) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseResponse_V2_M2B.Unmarshal(m, b)
}
func (m *CloseResponse_V2_M2B) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseResponse_V2_M2B.Marshal(b, m, deterministic)
}
func (m *CloseResponse_V2_M2B) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseResponse_V2_M2B.Merge(m, src)
}
func (m *CloseResponse_V2_M2B) XXX_Size() int {
	return xxx_messageInfo_CloseResponse_V2_M2B.Size(m)
}
func (m *CloseResponse_V2_M2B) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseResponse_V2_M2B.DiscardUnknown(m)
}

var xxx_messageInfo_CloseResponse_V2_M2B proto.InternalMessageInfo

func (m *CloseResponse_V2_M2B) GetErrCode() int32 {
	if m != nil && m.ErrCode != nil {
		return *m.ErrCode
	}
	return 0
}

func (m *CloseResponse_V2_M2B) GetErrMsg() string {
	if m != nil && m.ErrMsg != nil {
		return *m.ErrMsg
	}
	return ""
}

func init() {
	proto.RegisterType((*EventProto)(nil), "EventProto")
	proto.RegisterType((*EnableBrokerFunInfo)(nil), "EnableBrokerFunInfo")
	proto.RegisterType((*AuthenticateInfo)(nil), "AuthenticateInfo")
	proto.RegisterType((*MasterCertificateInfo)(nil), "MasterCertificateInfo")
	proto.RegisterType((*MasterAuthorizedInfo)(nil), "MasterAuthorizedInfo")
	proto.RegisterType((*MasterBrokerAuthorizedInfo)(nil), "MasterBrokerAuthorizedInfo")
	proto.RegisterType((*RegisterRequestP2M)(nil), "RegisterRequestP2M")
	proto.RegisterType((*RegisterResponseM2P)(nil), "RegisterResponseM2P")
	proto.RegisterType((*HeartRequestP2M)(nil), "HeartRequestP2M")
	proto.RegisterType((*HeartResponseM2P)(nil), "HeartResponseM2P")
	proto.RegisterType((*CloseRequestP2M)(nil), "CloseRequestP2M")
	proto.RegisterType((*CloseResponseM2P)(nil), "CloseResponseM2P")
	proto.RegisterType((*RegisterRequestC2M)(nil), "RegisterRequestC2M")
	proto.RegisterType((*RegisterResponseM2C)(nil), "RegisterResponseM2C")
	proto.RegisterType((*HeartRequestC2M)(nil), "HeartRequestC2M")
	proto.RegisterType((*HeartResponseM2C)(nil), "HeartResponseM2C")
	proto.RegisterType((*CloseRequestC2M)(nil), "CloseRequestC2M")
	proto.RegisterType((*CloseResponseM2C)(nil), "CloseResponseM2C")
	proto.RegisterType((*RegisterRequestB2M)(nil), "RegisterRequestB2M")
	proto.RegisterType((*RegisterResponseM2B)(nil), "RegisterResponseM2B")
	proto.RegisterType((*HeartRequestB2M)(nil), "HeartRequestB2M")
	proto.RegisterType((*HeartResponseM2B)(nil), "HeartResponseM2B")
	proto.RegisterType((*CloseRequestB2M)(nil), "CloseRequestB2M")
	proto.RegisterType((*CloseResponseM2B)(nil), "CloseResponseM2B")
	proto.RegisterType((*DataStorePath)(nil), "DataStorePath")
	proto.RegisterType((*TopicRmvInfo)(nil), "TopicRmvInfo")
	proto.RegisterType((*DefaultConfigInfo)(nil), "DefaultConfigInfo")
	proto.RegisterType((*TopicConfigInfo)(nil), "TopicConfigInfo")
	proto.RegisterType((*BrokerConfigInfo)(nil), "BrokerConfigInfo")
	proto.RegisterType((*BrokerPolicyInfo)(nil), "BrokerPolicyInfo")
	proto.RegisterType((*BrokerStatusInfo)(nil), "BrokerStatusInfo")
	proto.RegisterType((*BrokerOperateInfo)(nil), "BrokerOperateInfo")
	proto.RegisterType((*RegisterRequest_V2_B2M)(nil), "RegisterRequest_V2_B2M")
	proto.RegisterType((*RegisterResponse_V2_M2B)(nil), "RegisterResponse_V2_M2B")
	proto.RegisterType((*HeartRequest_V2_B2M)(nil), "HeartRequest_V2_B2M")
	proto.RegisterType((*HeartResponse_V2_M2B)(nil), "HeartResponse_V2_M2B")
	proto.RegisterType((*CloseRequest_V2_B2M)(nil), "CloseRequest_V2_B2M")
	proto.RegisterType((*CloseResponse_V2_M2B)(nil), "CloseResponse_V2_M2B")
}

func init() {
	proto.RegisterFile("MasterService.proto", fileDescriptor_b409182280420a1f)
}

var fileDescriptor_b409182280420a1f = []byte{
	// 2452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5a, 0xcd, 0x6f, 0xe4, 0x48,
	0x15, 0x97, 0xbb, 0xdb, 0x9d, 0xee, 0xd7, 0xdd, 0x49, 0xc7, 0xc9, 0x0c, 0x66, 0x40, 0xa3, 0x60,
	0xad, 0x56, 0xd1, 0x8a, 0x6d, 0x0d, 0xcd, 0x68, 0xe1, 0xb0, 0x48, 0x4c, 0x7a, 0x66, 0x35, 0x11,
	0x84, 0x69, 0x39, 0x61, 0xb8, 0xb1, 0x72, 0xdb, 0xd5, 0x89, 0x89, 0xdb, 0xee, 0x71, 0x95, 0x33,
	0xca, 0x0a, 0x09, 0x2d, 0x8c, 0x04, 0x17, 0x6e, 0x9c, 0x11, 0xe2, 0x04, 0x88, 0x2b, 0x20, 0x71,
	0xe5, 0x9f, 0xe0, 0x88, 0x84, 0xc4, 0x81, 0xbf, 0x02, 0xd5, 0x2b, 0x7f, 0x94, 0x3f, 0x3a, 0xed,
	0xf4, 0x64, 0xb5, 0x08, 0x71, 0xac, 0x5f, 0x3d, 0xbb, 0x3e, 0xde, 0xef, 0xfd, 0xea, 0xbd, 0xb2,
	0x61, 0xef, 0xc4, 0xa2, 0x8c, 0x84, 0xa7, 0x24, 0xbc, 0x72, 0x6d, 0x32, 0x5a, 0x86, 0x01, 0x0b,
	0x8c, 0x37, 0x0a, 0xc0, 0xb3, 0x2b, 0xe2, 0xb3, 0x29, 0x6f, 0x6a, 0x07, 0xd0, 0x0b, 0xc9, 0xcc,
	0xf2, 0x2c, 0xdf, 0x26, 0xc7, 0x8e, 0xae, 0x1c, 0x28, 0x87, 0x4d, 0x53, 0x86, 0xb4, 0xfb, 0xd0,
	0x0e, 0x96, 0x67, 0xd7, 0x4b, 0xa2, 0x37, 0x0e, 0x94, 0x43, 0xd5, 0x8c, 0x5b, 0x1c, 0xa7, 0xcc,
	0x62, 0x11, 0xd5, 0x9b, 0x02, 0x17, 0x2d, 0xed, 0x1d, 0x18, 0xd0, 0x68, 0x46, 0xed, 0xd0, 0x9d,
	0x91, 0x63, 0x7f, 0x1e, 0xe8, 0xad, 0x83, 0xe6, 0x61, 0xd7, 0xcc, 0x83, 0xc6, 0x5f, 0x1a, 0xb0,
	0xf7, 0xcc, 0xb7, 0x66, 0x1e, 0x39, 0x0a, 0x83, 0x4b, 0x12, 0x7e, 0x14, 0xf9, 0x1c, 0xd7, 0x3e,
	0x84, 0x2f, 0x12, 0x84, 0x27, 0x81, 0x4f, 0xa3, 0x05, 0x79, 0x12, 0xb1, 0x0b, 0xe2, 0x33, 0xd7,
	0xb6, 0x18, 0xd1, 0x95, 0x83, 0xc6, 0x61, 0xc7, 0x5c, 0x6d, 0xa0, 0x7d, 0x00, 0xf7, 0x4b, 0x9d,
	0x41, 0xe8, 0x7e, 0xc2, 0xe7, 0xce, 0x1f, 0x5d, 0xd1, 0x9b, 0x8d, 0x3a, 0x0d, 0x03, 0x27, 0xb2,
	0xf3, 0xa3, 0x36, 0xe5, 0x51, 0x2b, 0x0c, 0xb2, 0x51, 0xa5, 0x4e, 0x31, 0x6a, 0x4b, 0x1e, 0xb5,
	0xd8, 0xab, 0x3d, 0x86, 0x7b, 0xa2, 0xe7, 0xa5, 0x4b, 0x5d, 0x76, 0x16, 0x5c, 0x12, 0x7f, 0x72,
	0x41, 0xec, 0x4b, 0x5d, 0x3d, 0x50, 0x0e, 0x3b, 0x66, 0x75, 0xa7, 0xf1, 0x6b, 0x05, 0x86, 0xf2,
	0xf0, 0xb8, 0x6d, 0x0f, 0xa0, 0x13, 0x51, 0x12, 0x7e, 0xcf, 0x5a, 0x88, 0x5d, 0xea, 0x9a, 0x69,
	0x5b, 0xfb, 0x32, 0x74, 0x99, 0xbb, 0x20, 0x94, 0x59, 0x8b, 0x25, 0xee, 0x43, 0xd3, 0xcc, 0x00,
	0x6d, 0x1f, 0x54, 0x3f, 0xf0, 0x6d, 0xb1, 0x4c, 0xd5, 0x14, 0x0d, 0xfe, 0x4c, 0xc0, 0x2e, 0xa6,
	0x56, 0x68, 0x2d, 0x28, 0xae, 0xa2, 0x6b, 0x66, 0x00, 0xef, 0xa5, 0xee, 0xb9, 0x6f, 0xb1, 0x28,
	0x24, 0xba, 0x2a, 0x7a, 0x53, 0xc0, 0x58, 0xc2, 0x3d, 0x41, 0xbc, 0x09, 0x09, 0x99, 0x3b, 0xcf,
	0x26, 0xf9, 0x3e, 0x74, 0xac, 0x88, 0x5d, 0x20, 0x29, 0x38, 0xd1, 0x7a, 0xe3, 0xdd, 0x51, 0x71,
	0x25, 0x66, 0x6a, 0xa2, 0x1d, 0xc2, 0x8e, 0x95, 0xec, 0x95, 0x83, 0x1b, 0x80, 0x0c, 0xec, 0x9a,
	0x45, 0xd8, 0xf8, 0x31, 0xec, 0x8b, 0x11, 0xd3, 0xbd, 0x75, 0xf0, 0x0d, 0x63, 0xd8, 0xbf, 0xe2,
	0xbb, 0xf7, 0xa4, 0xf0, 0x1a, 0x05, 0x37, 0xa1, 0xb2, 0x4f, 0x7b, 0x04, 0x7b, 0xfc, 0xf5, 0x4f,
	0x2a, 0x47, 0xae, 0xea, 0x32, 0x7e, 0xaa, 0xc0, 0x03, 0x31, 0xbc, 0xa0, 0xf2, 0x2d, 0x26, 0xd1,
	0xbd, 0xb3, 0x49, 0xfc, 0x4b, 0x01, 0xcd, 0x24, 0xe7, 0x2e, 0x9f, 0x86, 0x49, 0x5e, 0x45, 0x84,
	0xb2, 0xe9, 0xf8, 0x84, 0xf3, 0xc2, 0xf6, 0x5c, 0xe2, 0x33, 0x8c, 0x6d, 0xe4, 0x45, 0xd2, 0x46,
	0x5e, 0x04, 0x4b, 0xd7, 0xfe, 0xae, 0x4b, 0x99, 0xde, 0xc0, 0x20, 0xcd, 0x00, 0xed, 0x5d, 0xd8,
	0x9e, 0xe1, 0x72, 0x90, 0x75, 0xa7, 0xd1, 0x02, 0x09, 0xd2, 0x34, 0x0b, 0x28, 0x1f, 0xe1, 0x22,
	0xa0, 0x0c, 0x99, 0x27, 0x88, 0x92, 0xb6, 0xb5, 0xb1, 0xe4, 0x70, 0x15, 0x1d, 0x7e, 0x7f, 0x54,
	0x49, 0x0d, 0xc9, 0xeb, 0x0f, 0x01, 0x7e, 0xe4, 0x5c, 0xbe, 0x24, 0x21, 0x75, 0x03, 0x5f, 0x6f,
	0xe3, 0x8a, 0x25, 0xc4, 0xf8, 0xb7, 0x02, 0x7b, 0xd9, 0x42, 0xe9, 0x32, 0xf0, 0x29, 0x39, 0x19,
	0x4f, 0x35, 0x1d, 0xb6, 0x68, 0x64, 0xdb, 0x84, 0xd2, 0x58, 0x26, 0x92, 0x26, 0xef, 0x21, 0x61,
	0x38, 0x09, 0x1c, 0xa1, 0x02, 0xaa, 0x99, 0x34, 0xb9, 0x84, 0x91, 0x30, 0x3c, 0xa1, 0xe7, 0xb8,
	0xb6, 0xae, 0x19, 0xb7, 0x2a, 0xd6, 0xde, 0xaa, 0x5c, 0xfb, 0x01, 0xf4, 0x04, 0xc2, 0x67, 0x4e,
	0x75, 0x15, 0xf7, 0x50, 0x86, 0xb4, 0x6f, 0xc1, 0xb6, 0x95, 0xa3, 0x03, 0xae, 0xa8, 0x37, 0xbe,
	0x37, 0xaa, 0x22, 0xac, 0x59, 0x30, 0x36, 0xfe, 0xa6, 0xc0, 0xce, 0x73, 0x62, 0x85, 0xac, 0xa6,
	0x4b, 0xcb, 0x13, 0x6f, 0xac, 0x75, 0x5a, 0xb3, 0xe0, 0xb4, 0x1c, 0x2d, 0x5a, 0x45, 0x5a, 0x6c,
	0xe0, 0x52, 0xe3, 0xf7, 0x0d, 0x18, 0xc6, 0xab, 0xf8, 0x7c, 0xfd, 0xf5, 0x10, 0x00, 0x57, 0x22,
	0xbb, 0x4b, 0x42, 0x8a, 0xfe, 0x6c, 0x97, 0xfd, 0x89, 0xc7, 0xe5, 0xab, 0xc8, 0x0d, 0x51, 0xc6,
	0xf5, 0x2d, 0x14, 0x6a, 0x19, 0xaa, 0xf0, 0x78, 0xe7, 0x36, 0x1e, 0xb7, 0x60, 0x67, 0xe2, 0x05,
	0x94, 0xd4, 0x74, 0xb8, 0xec, 0x8e, 0x46, 0x4d, 0x77, 0xfc, 0x10, 0x86, 0xf1, 0x10, 0x9f, 0x89,
	0x37, 0x8c, 0xbf, 0xaa, 0x25, 0x29, 0x9a, 0xac, 0x97, 0xa2, 0xf3, 0x30, 0x88, 0x96, 0x48, 0xc8,
	0x86, 0x38, 0x50, 0x52, 0xe0, 0x2d, 0xd8, 0x5a, 0xca, 0x45, 0xd4, 0x8a, 0x5c, 0x84, 0xd3, 0x07,
	0x1f, 0x99, 0x04, 0xbe, 0xe3, 0x32, 0x21, 0x3b, 0xdc, 0xac, 0x80, 0x6a, 0x06, 0xf4, 0x63, 0x4f,
	0x1f, 0x05, 0x91, 0xef, 0xc4, 0xde, 0xcf, 0x61, 0x9c, 0x20, 0x94, 0x50, 0xae, 0x54, 0x67, 0xee,
	0x82, 0xa0, 0xef, 0x9b, 0xa6, 0x0c, 0x71, 0x12, 0xc6, 0xcd, 0xef, 0x90, 0x6b, 0xbd, 0x2b, 0x04,
	0x2e, 0x43, 0x04, 0x49, 0x99, 0xe5, 0x4d, 0x82, 0xc8, 0x67, 0x3a, 0x60, 0x6e, 0x25, 0x21, 0xda,
	0x57, 0x61, 0x37, 0x1e, 0xd1, 0x99, 0x5a, 0x21, 0x13, 0x13, 0xee, 0xe1, 0x6b, 0xca, 0x1d, 0x7c,
	0xce, 0x7e, 0xc0, 0x9e, 0x78, 0x5e, 0xc0, 0x99, 0xe0, 0xe8, 0x7d, 0x31, 0x67, 0x19, 0xc3, 0xe3,
	0x9c, 0x78, 0xc4, 0x66, 0x47, 0xee, 0xb9, 0x3e, 0x40, 0x83, 0x0c, 0xd0, 0xde, 0x83, 0x21, 0xba,
	0xe2, 0x23, 0x2f, 0x78, 0x8d, 0x91, 0x74, 0xec, 0xe8, 0xdb, 0xb8, 0xac, 0x12, 0xce, 0x77, 0xd2,
	0x21, 0x73, 0xd9, 0x72, 0x07, 0x2d, 0x0b, 0x28, 0xee, 0x01, 0x75, 0x4e, 0x59, 0x10, 0xf2, 0xa4,
	0x73, 0x88, 0x36, 0x12, 0xc2, 0xfd, 0xf6, 0x2a, 0xbc, 0x9e, 0x86, 0x6e, 0x10, 0xba, 0xec, 0xfa,
	0xd8, 0xd1, 0x77, 0x71, 0x1b, 0xf2, 0x60, 0x8e, 0xfc, 0xda, 0x46, 0xc7, 0xcb, 0x5e, 0xe9, 0x78,
	0xf9, 0x47, 0xb3, 0xea, 0x78, 0x99, 0xdc, 0xa9, 0x5c, 0x25, 0x9c, 0x95, 0xb2, 0xe3, 0x0c, 0x28,
	0x79, 0x4c, 0xad, 0xf0, 0x58, 0x79, 0x9f, 0xdb, 0x95, 0xfb, 0x3c, 0x02, 0x2d, 0x41, 0x02, 0x9f,
	0x85, 0x81, 0x87, 0x43, 0x6e, 0xe1, 0xaa, 0x2b, 0x7a, 0x2a, 0x7d, 0xdd, 0x59, 0xe1, 0xeb, 0x31,
	0xec, 0x67, 0x98, 0xf4, 0x76, 0xc1, 0xe8, 0xca, 0xbe, 0x82, 0xdf, 0x61, 0xbd, 0xdf, 0x7b, 0x55,
	0x7e, 0x2f, 0x4b, 0x6c, 0xff, 0x36, 0x12, 0xfb, 0xab, 0x66, 0xfe, 0x50, 0x7d, 0x3b, 0x71, 0x2a,
	0x49, 0x4c, 0xb3, 0x4a, 0x62, 0x1e, 0xc1, 0x5e, 0x48, 0x96, 0x41, 0xc8, 0x4e, 0x0b, 0xa5, 0x11,
	0xa7, 0x52, 0x55, 0x97, 0xf6, 0x15, 0x50, 0x09, 0x2f, 0xd3, 0xe2, 0x53, 0xb6, 0x37, 0xca, 0x8a,
	0x36, 0x53, 0xf4, 0xd4, 0x66, 0x41, 0x95, 0x57, 0xb7, 0x56, 0x78, 0x35, 0xef, 0xa1, 0xce, 0x7a,
	0x0f, 0x75, 0xd7, 0x45, 0x26, 0xd4, 0x3c, 0x96, 0xde, 0xb4, 0x4a, 0x59, 0xc2, 0xdd, 0x86, 0x5d,
	0xba, 0xa3, 0xad, 0x95, 0x3b, 0xfa, 0xff, 0xd8, 0x5b, 0x17, 0x7b, 0x85, 0x04, 0xa8, 0x5f, 0x27,
	0x01, 0x1a, 0xdc, 0x26, 0x3a, 0x7f, 0x92, 0x4f, 0x80, 0xde, 0x2e, 0x38, 0x65, 0x1e, 0x36, 0x37,
	0x4e, 0x8f, 0xee, 0x94, 0x86, 0xc6, 0x9f, 0x5b, 0xa5, 0xf4, 0xe8, 0x68, 0xcd, 0x22, 0x0d, 0xe8,
	0x8b, 0x24, 0xf4, 0x85, 0xef, 0xb9, 0x7e, 0x72, 0x99, 0x91, 0xc3, 0xf8, 0x46, 0x88, 0xfb, 0x82,
	0x33, 0x8f, 0xc6, 0x57, 0x16, 0x19, 0xc0, 0x9d, 0x1b, 0x12, 0xcb, 0x39, 0xc5, 0x2b, 0x1a, 0x73,
	0xc9, 0x50, 0x79, 0x54, 0x33, 0x0f, 0x72, 0x6a, 0xbf, 0x0e, 0x5d, 0x46, 0x32, 0x33, 0x15, 0xcd,
	0x0a, 0x28, 0xaf, 0xcc, 0xed, 0x28, 0xae, 0x76, 0x27, 0x81, 0x3f, 0xc7, 0x18, 0xe0, 0x09, 0x77,
	0x11, 0xe6, 0x6f, 0xb4, 0x03, 0x7f, 0x9e, 0x64, 0xe0, 0x28, 0x3c, 0xf8, 0xc6, 0x3c, 0xaa, 0x3d,
	0x86, 0x7b, 0x62, 0x35, 0x4f, 0xc9, 0xdc, 0x8a, 0x3c, 0x86, 0x8f, 0x8b, 0xe4, 0x99, 0x6f, 0x45,
	0x75, 0xa7, 0xf6, 0x01, 0xdc, 0x17, 0x1d, 0x67, 0xfc, 0xf4, 0x3c, 0x25, 0xd9, 0x63, 0x5d, 0x14,
	0xe1, 0x15, 0xbd, 0x6b, 0x43, 0xe1, 0x00, 0x7a, 0x73, 0x29, 0x0a, 0x7b, 0x22, 0x89, 0x93, 0xa0,
	0x72, 0xb0, 0xf4, 0xab, 0x82, 0x45, 0x87, 0x2d, 0xe6, 0xd1, 0x69, 0x10, 0x32, 0x8c, 0x01, 0xd5,
	0x4c, 0x9a, 0x39, 0x62, 0x6e, 0xd7, 0x24, 0xe6, 0x3f, 0xd5, 0xaa, 0xd4, 0xe4, 0xe8, 0x4e, 0x35,
	0xf2, 0x01, 0x74, 0x28, 0x0b, 0x96, 0x26, 0xb1, 0x9c, 0xf8, 0x70, 0x4a, 0xdb, 0x98, 0x26, 0xb2,
	0x60, 0xf9, 0x03, 0xce, 0x05, 0x24, 0x06, 0x4f, 0x13, 0x13, 0x80, 0x73, 0x94, 0x59, 0x97, 0x24,
	0xf5, 0x40, 0x5b, 0x70, 0x54, 0xc6, 0xb4, 0x6f, 0xc3, 0x90, 0x48, 0x77, 0x7e, 0xa9, 0x20, 0xf6,
	0xc6, 0xfb, 0xa3, 0x8a, 0xcb, 0x40, 0xb3, 0x64, 0x5d, 0xc5, 0x3c, 0xa1, 0x91, 0x35, 0x98, 0x27,
	0x4e, 0xaa, 0xda, 0xcc, 0x03, 0xd4, 0xd2, 0x5b, 0x33, 0xaf, 0x77, 0x0b, 0xe6, 0xf5, 0xd7, 0x31,
	0x6f, 0x50, 0x66, 0xde, 0x21, 0xec, 0xcc, 0x0b, 0xaa, 0xbf, 0x2d, 0x6e, 0xc5, 0x0a, 0x70, 0x99,
	0xa3, 0x3b, 0xf5, 0x92, 0xa9, 0xe1, 0x2d, 0xe4, 0x5a, 0x7b, 0x01, 0xfb, 0xb3, 0x8a, 0x5b, 0x2f,
	0x4c, 0xd8, 0x7b, 0xe3, 0x2f, 0x8d, 0x56, 0x5f, 0x8c, 0x99, 0x95, 0x0f, 0x1a, 0x9f, 0xaa, 0xf9,
	0xec, 0x2c, 0xd6, 0xc6, 0xb8, 0x08, 0x4f, 0xb5, 0x31, 0x69, 0xd7, 0xd2, 0xc6, 0x92, 0xfa, 0x35,
	0xeb, 0xa9, 0x5f, 0xab, 0xae, 0xfa, 0xa9, 0x75, 0xd5, 0xaf, 0x5d, 0xa9, 0x7e, 0xc5, 0xd8, 0xd9,
	0xaa, 0x88, 0x9d, 0x31, 0xec, 0xf3, 0xb6, 0x49, 0x16, 0xc1, 0x15, 0x71, 0xce, 0xd2, 0xfa, 0xa1,
	0x83, 0xb6, 0x95, 0x7d, 0xab, 0xb9, 0xdd, 0xdd, 0x8c, 0xdb, 0x70, 0x23, 0xb7, 0xb1, 0x30, 0xcd,
	0x66, 0x40, 0xa5, 0x70, 0x28, 0x77, 0xdc, 0x41, 0x24, 0x94, 0xf8, 0xbd, 0xbd, 0x2e, 0x15, 0xdd,
	0xa9, 0xa9, 0xb4, 0x7f, 0x68, 0x97, 0x52, 0xd1, 0xff, 0x16, 0x99, 0xbd, 0xfb, 0xa3, 0xf7, 0x5d,
	0xd8, 0xf6, 0x09, 0x71, 0x4c, 0xac, 0x41, 0x9e, 0x5a, 0xcc, 0x8a, 0x29, 0x55, 0x40, 0x4b, 0x24,
	0xed, 0x56, 0x90, 0xf4, 0x11, 0xec, 0x65, 0x44, 0xcc, 0x38, 0x0a, 0xa2, 0xcc, 0xa9, 0xe8, 0x5a,
	0x4d, 0xd1, 0xde, 0x66, 0x14, 0xed, 0xdf, 0x48, 0x51, 0x2c, 0xc3, 0xd2, 0x09, 0xa4, 0x0f, 0x0d,
	0xf0, 0xa1, 0xaa, 0xae, 0x02, 0x4d, 0xb7, 0xd7, 0xd1, 0x74, 0xa7, 0x96, 0x60, 0x0f, 0x6b, 0x0a,
	0xf6, 0x6e, 0x3d, 0xc1, 0xd6, 0xee, 0x42, 0xb0, 0xf7, 0x36, 0x15, 0xec, 0xc2, 0x8d, 0xe5, 0x3a,
	0xbd, 0xbe, 0x9b, 0x1b, 0xcb, 0x3b, 0x0d, 0x47, 0xe3, 0x53, 0x05, 0x06, 0x9c, 0xe3, 0xe8, 0xd4,
	0xa9, 0xc5, 0x2e, 0xf8, 0x0a, 0x42, 0x62, 0x07, 0xa1, 0x13, 0xaf, 0x40, 0x35, 0xd3, 0x36, 0xef,
	0x73, 0xe9, 0x13, 0x9b, 0xb9, 0x57, 0xc9, 0x69, 0x93, 0xb6, 0x79, 0xf0, 0xba, 0xf4, 0x29, 0x99,
	0xf3, 0x97, 0x24, 0x59, 0x78, 0x0a, 0xf0, 0x27, 0x1d, 0x8b, 0x59, 0xd8, 0xd9, 0x42, 0x0e, 0xa4,
	0x6d, 0xe3, 0x39, 0xf4, 0x91, 0x79, 0xe6, 0xe2, 0x0a, 0xfd, 0x94, 0x5c, 0x12, 0x49, 0x9f, 0xf4,
	0x32, 0x40, 0x08, 0x08, 0x3f, 0x90, 0x8e, 0x9d, 0x78, 0x91, 0x69, 0xdb, 0xf8, 0x59, 0x0b, 0x76,
	0xa5, 0x80, 0x71, 0xcf, 0x93, 0x4b, 0x4e, 0x3f, 0x5a, 0x88, 0x88, 0xe0, 0xcb, 0xa4, 0xf1, 0xba,
	0x0a, 0x28, 0x27, 0xa1, 0x1f, 0x2d, 0xd2, 0x0b, 0x44, 0x1a, 0xbf, 0x3e, 0x0f, 0x72, 0xab, 0xc8,
	0x9f, 0x7b, 0x11, 0xbd, 0x38, 0xa1, 0xe7, 0x13, 0x3f, 0x3d, 0x51, 0x73, 0x20, 0xa7, 0x7e, 0x0c,
	0x1c, 0xfb, 0x8c, 0x84, 0x57, 0x96, 0x17, 0x1f, 0xa9, 0x45, 0x58, 0xb2, 0x44, 0x3f, 0xb8, 0x9f,
	0x90, 0xb8, 0xf4, 0x28, 0xc2, 0xfc, 0x94, 0x59, 0x90, 0xc5, 0xc4, 0xb2, 0x2f, 0xc8, 0x91, 0x17,
	0xd8, 0x97, 0x68, 0x2b, 0x8e, 0xd5, 0x72, 0x07, 0x2f, 0xaa, 0xfd, 0x68, 0x71, 0x22, 0xe3, 0xb1,
	0x0c, 0x96, 0x70, 0xfe, 0xe6, 0x99, 0xc5, 0x2e, 0x9e, 0xba, 0xf4, 0x12, 0xb5, 0xf6, 0xfb, 0xbe,
	0xcb, 0x50, 0x0b, 0x55, 0xb3, 0xdc, 0xc1, 0xdf, 0x9c, 0x80, 0x5c, 0xb6, 0xd1, 0xb8, 0x2b, 0xde,
	0x5c, 0xc4, 0xf9, 0x6e, 0x59, 0xb6, 0x4d, 0x96, 0x6c, 0x1a, 0xcd, 0x3c, 0x97, 0x5e, 0xc4, 0x82,
	0x98, 0x07, 0xf1, 0x7b, 0x27, 0x02, 0xe9, 0x45, 0x90, 0xde, 0x43, 0xbb, 0x22, 0xcc, 0xa5, 0xd8,
	0x21, 0x1e, 0x61, 0x64, 0x1a, 0x78, 0xae, 0x7d, 0xad, 0xf7, 0x91, 0x1e, 0x39, 0xcc, 0xf8, 0x65,
	0x0b, 0x76, 0x52, 0x29, 0x8b, 0x39, 0x70, 0x1b, 0x4e, 0x29, 0x32, 0xa7, 0x2a, 0xd8, 0x23, 0x3e,
	0xfa, 0xaf, 0x65, 0x4f, 0x4b, 0x48, 0xd8, 0x1a, 0xf6, 0xa8, 0xc2, 0x6a, 0x2d, 0x7b, 0xda, 0x68,
	0x57, 0x87, 0x3d, 0x5b, 0x39, 0xcb, 0x9b, 0xd9, 0xd3, 0x41, 0xdb, 0x9a, 0xec, 0x11, 0x55, 0x44,
	0x99, 0x3d, 0x15, 0x3e, 0x56, 0x6a, 0xfa, 0x58, 0xa9, 0xe7, 0x63, 0xa5, 0xe8, 0x63, 0xed, 0x3d,
	0x49, 0x4f, 0xf8, 0x19, 0xd6, 0x1b, 0x6f, 0x8f, 0x72, 0x3a, 0x26, 0xe9, 0xcb, 0xef, 0x1a, 0x30,
	0xcc, 0xf2, 0x83, 0x98, 0x10, 0x69, 0xf2, 0x1c, 0xa7, 0x12, 0xe2, 0xc3, 0x78, 0x0e, 0xab, 0xc8,
	0x23, 0x1a, 0x95, 0x79, 0xc4, 0x37, 0x61, 0xe0, 0x90, 0x79, 0xf6, 0xf2, 0xf8, 0xc2, 0x45, 0x1b,
	0x95, 0xb4, 0xc8, 0xcc, 0x1b, 0x6a, 0x1f, 0xc2, 0x90, 0xe5, 0x99, 0x4a, 0xf1, 0x5a, 0xbc, 0x37,
	0x1e, 0x8e, 0x0a, 0x14, 0x36, 0x4b, 0x96, 0xf9, 0x8b, 0x0f, 0x71, 0x61, 0x27, 0x5d, 0x7c, 0x48,
	0x25, 0x78, 0x3b, 0x5f, 0x82, 0xeb, 0xb0, 0xf5, 0x9a, 0xcc, 0xb0, 0x47, 0x90, 0x25, 0x69, 0x1a,
	0x2c, 0xd9, 0x29, 0xb1, 0xcd, 0xc9, 0x0f, 0x16, 0x4b, 0xd1, 0x4a, 0x7e, 0x92, 0x49, 0xdb, 0xe5,
	0x73, 0xbb, 0x51, 0x75, 0x6e, 0x3f, 0x04, 0x58, 0xa6, 0xef, 0xc3, 0xcd, 0xe9, 0x9a, 0x12, 0x62,
	0xfc, 0x56, 0x49, 0x86, 0x15, 0xa5, 0x46, 0x32, 0xac, 0x4b, 0xe3, 0xca, 0x46, 0x49, 0xce, 0x9a,
	0x55, 0x55, 0x4d, 0xa3, 0x5e, 0x55, 0xd3, 0xac, 0xac, 0x6a, 0xde, 0x81, 0x81, 0x67, 0x51, 0xf6,
	0x62, 0x49, 0x42, 0x7e, 0x00, 0x3b, 0x49, 0xe4, 0xe6, 0x40, 0xe3, 0xef, 0x4d, 0xd8, 0x15, 0x93,
	0x4c, 0xb0, 0x58, 0x57, 0x82, 0xf4, 0x39, 0x71, 0xac, 0x64, 0x00, 0x8f, 0xa2, 0x79, 0x68, 0xc7,
	0x7f, 0x21, 0x89, 0x01, 0xe3, 0xa9, 0x96, 0x70, 0x4e, 0xc8, 0x79, 0x68, 0x9b, 0xcb, 0x98, 0x2d,
	0xb8, 0x4d, 0x1d, 0x33, 0x87, 0xdd, 0xfc, 0x8b, 0x50, 0x0b, 0x1f, 0xd8, 0xe8, 0x17, 0x21, 0xc1,
	0x9d, 0x8d, 0x7e, 0x11, 0x6a, 0xcb, 0xa3, 0xde, 0xee, 0x17, 0xa1, 0x2d, 0x79, 0xd4, 0xfa, 0xbf,
	0x08, 0x75, 0x6e, 0xf8, 0x45, 0x48, 0xfb, 0x3a, 0x0c, 0xc2, 0xc5, 0x95, 0x54, 0x85, 0x75, 0x31,
	0x9a, 0x06, 0x23, 0x39, 0xc3, 0x30, 0xf3, 0x36, 0xc6, 0xcf, 0x1b, 0x70, 0xbf, 0x70, 0x2f, 0xf9,
	0xf1, 0xcb, 0xf1, 0xc7, 0xeb, 0xee, 0x26, 0xbf, 0x01, 0x03, 0x9a, 0x90, 0x28, 0x4e, 0xea, 0x1a,
	0xf8, 0x67, 0x4f, 0x91, 0xcb, 0x66, 0xde, 0x4e, 0xfb, 0x1a, 0x80, 0x2d, 0x8b, 0x85, 0xfc, 0x94,
	0x14, 0xf0, 0x92, 0x11, 0x7f, 0x44, 0x0a, 0xa1, 0x56, 0xee, 0x91, 0x2c, 0x56, 0xe5, 0xa8, 0xda,
	0xe8, 0x7f, 0x85, 0x3f, 0x36, 0xe0, 0x0b, 0xc5, 0x8b, 0x36, 0xbe, 0x15, 0x71, 0xda, 0x99, 0x24,
	0x97, 0xca, 0xaa, 0xe4, 0x52, 0xfc, 0xa6, 0x93, 0xd4, 0x7a, 0xc5, 0x75, 0x2a, 0xeb, 0xd7, 0xf9,
	0x18, 0x7a, 0x41, 0x16, 0x5e, 0xf1, 0xf7, 0x0a, 0x6d, 0x54, 0x0a, 0x3c, 0x53, 0x36, 0x2b, 0xec,
	0x8e, 0x9a, 0x1b, 0x68, 0xc5, 0xee, 0x4c, 0x56, 0xfc, 0x9e, 0x72, 0x63, 0x19, 0x50, 0xbc, 0xb1,
	0x7f, 0xd3, 0x80, 0x3d, 0xf9, 0xc6, 0x46, 0x62, 0xcd, 0xca, 0x2a, 0xe0, 0xf3, 0x64, 0x8d, 0xf2,
	0xd9, 0xb0, 0xe6, 0x4f, 0x0d, 0xd8, 0xcf, 0x5d, 0x1a, 0xfc, 0x6f, 0x52, 0x66, 0x55, 0xfd, 0xd8,
	0xde, 0xb4, 0x7e, 0x24, 0xb0, 0x27, 0xd7, 0x8f, 0x75, 0xd8, 0xb3, 0x49, 0x0d, 0xf9, 0x1c, 0xf6,
	0x73, 0x35, 0xe4, 0xc6, 0xde, 0x39, 0x7a, 0x06, 0xef, 0x07, 0xe1, 0xf9, 0xc8, 0x5a, 0xf2, 0xe4,
	0x6f, 0xc4, 0xa2, 0x19, 0x59, 0xbc, 0x1a, 0xd9, 0x41, 0x48, 0x66, 0x16, 0x8d, 0xff, 0xb2, 0x9d,
	0x45, 0xf3, 0xd1, 0x39, 0xf1, 0x71, 0xa3, 0x9d, 0xa3, 0xfe, 0x04, 0xc5, 0x52, 0xcc, 0xf0, 0xb9,
	0xf2, 0x0b, 0x45, 0xf9, 0x8d, 0xa2, 0xfc, 0x27, 0x00, 0x00, 0xff, 0xff, 0x55, 0x12, 0x75, 0x64,
	0x9e, 0x2b, 0x00, 0x00,
}
